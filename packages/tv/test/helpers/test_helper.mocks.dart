// Mocks generated by Mockito 5.4.6 from annotations
// in tv/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i15;
import 'dart:convert' as _i29;
import 'dart:typed_data' as _i30;
import 'dart:ui' as _i23;

import 'package:core/common/failure.dart' as _i16;
import 'package:core/common/state_enum.dart' as _i21;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i14;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i22;
import 'package:search/domain/entities/media.dart' as _i28;
import 'package:tv/data/datasources/tv_remote_data_source.dart' as _i18;
import 'package:tv/data/models/tv_detail_model.dart' as _i3;
import 'package:tv/data/models/tv_model.dart' as _i19;
import 'package:tv/domain/entities/tv.dart' as _i17;
import 'package:tv/domain/entities/tv_detail.dart' as _i9;
import 'package:tv/domain/repositories/tv_repository.dart' as _i4;
import 'package:tv/domain/usecases/get_on_the_air_tvs.dart' as _i26;
import 'package:tv/domain/usecases/get_popular_tvs.dart' as _i5;
import 'package:tv/domain/usecases/get_top_rated_tvs.dart' as _i6;
import 'package:tv/domain/usecases/get_tv_detail.dart' as _i7;
import 'package:tv/domain/usecases/get_tv_recommendations.dart' as _i8;
import 'package:tv/presentation/provider/popular_tvs_notifier.dart' as _i20;
import 'package:tv/presentation/provider/top_rated_tvs_notifier.dart' as _i24;
import 'package:tv/presentation/provider/tv_detail_notifier.dart' as _i25;
import 'package:watchlist/domain/usecases/get_watchlist_items.dart' as _i10;
import 'package:watchlist/domain/usecases/get_watchlist_status.dart' as _i13;
import 'package:watchlist/domain/usecases/remove_watchlist.dart' as _i12;
import 'package:watchlist/domain/usecases/save_watchlist.dart' as _i11;
import 'package:watchlist/presentation/provider/watchlist_notifier.dart'
    as _i27;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvDetailResponse_1 extends _i1.SmartFake
    implements _i3.TvDetailResponse {
  _FakeTvDetailResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvRepository_2 extends _i1.SmartFake implements _i4.TvRepository {
  _FakeTvRepository_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetPopularTvs_3 extends _i1.SmartFake implements _i5.GetPopularTvs {
  _FakeGetPopularTvs_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTopRatedTvs_4 extends _i1.SmartFake
    implements _i6.GetTopRatedTvs {
  _FakeGetTopRatedTvs_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTvDetail_5 extends _i1.SmartFake implements _i7.GetTvDetail {
  _FakeGetTvDetail_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTvRecommendations_6 extends _i1.SmartFake
    implements _i8.GetTvRecommendations {
  _FakeGetTvRecommendations_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvDetail_7 extends _i1.SmartFake implements _i9.TvDetail {
  _FakeTvDetail_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetWatchlistItems_8 extends _i1.SmartFake
    implements _i10.GetWatchlistItems {
  _FakeGetWatchlistItems_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSaveWatchlistItem_9 extends _i1.SmartFake
    implements _i11.SaveWatchlistItem {
  _FakeSaveWatchlistItem_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRemoveWatchlistItem_10 extends _i1.SmartFake
    implements _i12.RemoveWatchlistItem {
  _FakeRemoveWatchlistItem_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetWatchlistStatus_11 extends _i1.SmartFake
    implements _i13.GetWatchlistStatus {
  _FakeGetWatchlistStatus_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_12 extends _i1.SmartFake implements _i14.Response {
  _FakeResponse_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_13 extends _i1.SmartFake
    implements _i14.StreamedResponse {
  _FakeStreamedResponse_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i4.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>> getOnTheAirTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTvs, []),
            returnValue:
                _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>.value(
                  _FakeEither_0<_i16.Failure, List<_i17.Tv>>(
                    this,
                    Invocation.method(#getOnTheAirTvs, []),
                  ),
                ),
          )
          as _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>);

  @override
  _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>> getPopularTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTvs, []),
            returnValue:
                _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>.value(
                  _FakeEither_0<_i16.Failure, List<_i17.Tv>>(
                    this,
                    Invocation.method(#getPopularTvs, []),
                  ),
                ),
          )
          as _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>);

  @override
  _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>> getTopRatedTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTvs, []),
            returnValue:
                _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>.value(
                  _FakeEither_0<_i16.Failure, List<_i17.Tv>>(
                    this,
                    Invocation.method(#getTopRatedTvs, []),
                  ),
                ),
          )
          as _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>);

  @override
  _i15.Future<_i2.Either<_i16.Failure, _i9.TvDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvDetail, [id]),
            returnValue:
                _i15.Future<_i2.Either<_i16.Failure, _i9.TvDetail>>.value(
                  _FakeEither_0<_i16.Failure, _i9.TvDetail>(
                    this,
                    Invocation.method(#getTvDetail, [id]),
                  ),
                ),
          )
          as _i15.Future<_i2.Either<_i16.Failure, _i9.TvDetail>>);

  @override
  _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>> getTvRecommendations(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTvRecommendations, [id]),
            returnValue:
                _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>.value(
                  _FakeEither_0<_i16.Failure, List<_i17.Tv>>(
                    this,
                    Invocation.method(#getTvRecommendations, [id]),
                  ),
                ),
          )
          as _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>);

  @override
  _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>> searchTvs(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchTvs, [query]),
            returnValue:
                _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>.value(
                  _FakeEither_0<_i16.Failure, List<_i17.Tv>>(
                    this,
                    Invocation.method(#searchTvs, [query]),
                  ),
                ),
          )
          as _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i18.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.Future<List<_i19.TvModel>> getOnTheAirTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTvs, []),
            returnValue: _i15.Future<List<_i19.TvModel>>.value(
              <_i19.TvModel>[],
            ),
          )
          as _i15.Future<List<_i19.TvModel>>);

  @override
  _i15.Future<List<_i19.TvModel>> getPopularTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTvs, []),
            returnValue: _i15.Future<List<_i19.TvModel>>.value(
              <_i19.TvModel>[],
            ),
          )
          as _i15.Future<List<_i19.TvModel>>);

  @override
  _i15.Future<List<_i19.TvModel>> getTopRatedTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTvs, []),
            returnValue: _i15.Future<List<_i19.TvModel>>.value(
              <_i19.TvModel>[],
            ),
          )
          as _i15.Future<List<_i19.TvModel>>);

  @override
  _i15.Future<_i3.TvDetailResponse> getTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvDetail, [id]),
            returnValue: _i15.Future<_i3.TvDetailResponse>.value(
              _FakeTvDetailResponse_1(
                this,
                Invocation.method(#getTvDetail, [id]),
              ),
            ),
          )
          as _i15.Future<_i3.TvDetailResponse>);

  @override
  _i15.Future<List<_i19.TvModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvRecommendations, [id]),
            returnValue: _i15.Future<List<_i19.TvModel>>.value(
              <_i19.TvModel>[],
            ),
          )
          as _i15.Future<List<_i19.TvModel>>);

  @override
  _i15.Future<List<_i19.TvModel>> searchTvs(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchTvs, [query]),
            returnValue: _i15.Future<List<_i19.TvModel>>.value(
              <_i19.TvModel>[],
            ),
          )
          as _i15.Future<List<_i19.TvModel>>);
}

/// A class which mocks [GetPopularTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTvs extends _i1.Mock implements _i5.GetPopularTvs {
  MockGetPopularTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>.value(
                  _FakeEither_0<_i16.Failure, List<_i17.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>);
}

/// A class which mocks [PopularTvsNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularTvsNotifier extends _i1.Mock
    implements _i20.PopularTvsNotifier {
  MockPopularTvsNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.GetPopularTvs get getPopularTvs =>
      (super.noSuchMethod(
            Invocation.getter(#getPopularTvs),
            returnValue: _FakeGetPopularTvs_3(
              this,
              Invocation.getter(#getPopularTvs),
            ),
          )
          as _i5.GetPopularTvs);

  @override
  _i21.RequestState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i21.RequestState.empty,
          )
          as _i21.RequestState);

  @override
  List<_i17.Tv> get tvs =>
      (super.noSuchMethod(Invocation.getter(#tvs), returnValue: <_i17.Tv>[])
          as List<_i17.Tv>);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i22.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i15.Future<void> fetchPopularTvs() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPopularTvs, []),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  void addListener(_i23.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i23.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [TopRatedTvsNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTopRatedTvsNotifier extends _i1.Mock
    implements _i24.TopRatedTvsNotifier {
  MockTopRatedTvsNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.GetTopRatedTvs get getTopRatedTvs =>
      (super.noSuchMethod(
            Invocation.getter(#getTopRatedTvs),
            returnValue: _FakeGetTopRatedTvs_4(
              this,
              Invocation.getter(#getTopRatedTvs),
            ),
          )
          as _i6.GetTopRatedTvs);

  @override
  _i21.RequestState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i21.RequestState.empty,
          )
          as _i21.RequestState);

  @override
  List<_i17.Tv> get tvs =>
      (super.noSuchMethod(Invocation.getter(#tvs), returnValue: <_i17.Tv>[])
          as List<_i17.Tv>);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i22.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i15.Future<void> fetchTopRatedTvs() =>
      (super.noSuchMethod(
            Invocation.method(#fetchTopRatedTvs, []),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  void addListener(_i23.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i23.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [TvDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDetailNotifier extends _i1.Mock implements _i25.TvDetailNotifier {
  MockTvDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.GetTvDetail get getTvDetail =>
      (super.noSuchMethod(
            Invocation.getter(#getTvDetail),
            returnValue: _FakeGetTvDetail_5(
              this,
              Invocation.getter(#getTvDetail),
            ),
          )
          as _i7.GetTvDetail);

  @override
  _i8.GetTvRecommendations get getTvRecommendations =>
      (super.noSuchMethod(
            Invocation.getter(#getTvRecommendations),
            returnValue: _FakeGetTvRecommendations_6(
              this,
              Invocation.getter(#getTvRecommendations),
            ),
          )
          as _i8.GetTvRecommendations);

  @override
  _i9.TvDetail get tv =>
      (super.noSuchMethod(
            Invocation.getter(#tv),
            returnValue: _FakeTvDetail_7(this, Invocation.getter(#tv)),
          )
          as _i9.TvDetail);

  @override
  _i21.RequestState get tvState =>
      (super.noSuchMethod(
            Invocation.getter(#tvState),
            returnValue: _i21.RequestState.empty,
          )
          as _i21.RequestState);

  @override
  List<_i17.Tv> get tvRecommendations =>
      (super.noSuchMethod(
            Invocation.getter(#tvRecommendations),
            returnValue: <_i17.Tv>[],
          )
          as List<_i17.Tv>);

  @override
  _i21.RequestState get recommendationState =>
      (super.noSuchMethod(
            Invocation.getter(#recommendationState),
            returnValue: _i21.RequestState.empty,
          )
          as _i21.RequestState);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i22.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#isAddedToWatchlist),
            returnValue: false,
          )
          as bool);

  @override
  String get watchlistMessage =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistMessage),
            returnValue: _i22.dummyValue<String>(
              this,
              Invocation.getter(#watchlistMessage),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i15.Future<void> fetchTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#fetchTvDetail, [id]),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  void addListener(_i23.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i23.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [GetTopRatedTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTvs extends _i1.Mock implements _i6.GetTopRatedTvs {
  MockGetTopRatedTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>.value(
                  _FakeEither_0<_i16.Failure, List<_i17.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>);
}

/// A class which mocks [GetOnTheAirTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOnTheAirTvs extends _i1.Mock implements _i26.GetOnTheAirTvs {
  MockGetOnTheAirTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>.value(
                  _FakeEither_0<_i16.Failure, List<_i17.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i15.Future<_i2.Either<_i16.Failure, List<_i17.Tv>>>);
}

/// A class which mocks [WatchlistNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistNotifier extends _i1.Mock implements _i27.WatchlistNotifier {
  MockWatchlistNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.GetWatchlistItems get getWatchlistItems =>
      (super.noSuchMethod(
            Invocation.getter(#getWatchlistItems),
            returnValue: _FakeGetWatchlistItems_8(
              this,
              Invocation.getter(#getWatchlistItems),
            ),
          )
          as _i10.GetWatchlistItems);

  @override
  _i11.SaveWatchlistItem get saveWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#saveWatchlist),
            returnValue: _FakeSaveWatchlistItem_9(
              this,
              Invocation.getter(#saveWatchlist),
            ),
          )
          as _i11.SaveWatchlistItem);

  @override
  _i12.RemoveWatchlistItem get removeWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#removeWatchlist),
            returnValue: _FakeRemoveWatchlistItem_10(
              this,
              Invocation.getter(#removeWatchlist),
            ),
          )
          as _i12.RemoveWatchlistItem);

  @override
  _i13.GetWatchlistStatus get getWatchListStatus =>
      (super.noSuchMethod(
            Invocation.getter(#getWatchListStatus),
            returnValue: _FakeGetWatchlistStatus_11(
              this,
              Invocation.getter(#getWatchListStatus),
            ),
          )
          as _i13.GetWatchlistStatus);

  @override
  List<_i28.Media> get watchlistItems =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistItems),
            returnValue: <_i28.Media>[],
          )
          as List<_i28.Media>);

  @override
  _i21.RequestState get watchlistState =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistState),
            returnValue: _i21.RequestState.empty,
          )
          as _i21.RequestState);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i22.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#isAddedToWatchlist),
            returnValue: false,
          )
          as bool);

  @override
  String get watchlistMessage =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistMessage),
            returnValue: _i22.dummyValue<String>(
              this,
              Invocation.getter(#watchlistMessage),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i15.Future<void> fetchWatchlistItems() =>
      (super.noSuchMethod(
            Invocation.method(#fetchWatchlistItems, []),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  _i15.Future<void> addWatchlist(_i28.Media? item) =>
      (super.noSuchMethod(
            Invocation.method(#addWatchlist, [item]),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  _i15.Future<void> removeFromWatchlist(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#removeFromWatchlist, [id, mediaType]),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  _i15.Future<void> loadWatchlistStatus(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#loadWatchlistStatus, [id, mediaType]),
            returnValue: _i15.Future<void>.value(),
            returnValueForMissingStub: _i15.Future<void>.value(),
          )
          as _i15.Future<void>);

  @override
  void addListener(_i23.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i23.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i14.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.Future<_i14.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i15.Future<_i14.Response>.value(
              _FakeResponse_12(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i15.Future<_i14.Response>);

  @override
  _i15.Future<_i14.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i15.Future<_i14.Response>.value(
              _FakeResponse_12(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i15.Future<_i14.Response>);

  @override
  _i15.Future<_i14.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i29.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i15.Future<_i14.Response>.value(
              _FakeResponse_12(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i15.Future<_i14.Response>);

  @override
  _i15.Future<_i14.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i29.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i15.Future<_i14.Response>.value(
              _FakeResponse_12(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i15.Future<_i14.Response>);

  @override
  _i15.Future<_i14.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i29.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i15.Future<_i14.Response>.value(
              _FakeResponse_12(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i15.Future<_i14.Response>);

  @override
  _i15.Future<_i14.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i29.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i15.Future<_i14.Response>.value(
              _FakeResponse_12(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i15.Future<_i14.Response>);

  @override
  _i15.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i15.Future<String>.value(
              _i22.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i15.Future<String>);

  @override
  _i15.Future<_i30.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i15.Future<_i30.Uint8List>.value(_i30.Uint8List(0)),
          )
          as _i15.Future<_i30.Uint8List>);

  @override
  _i15.Future<_i14.StreamedResponse> send(_i14.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i15.Future<_i14.StreamedResponse>.value(
              _FakeStreamedResponse_13(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i15.Future<_i14.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}
