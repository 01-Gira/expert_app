// Mocks generated by Mockito 5.4.6 from annotations
// in tv/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i16;
import 'dart:convert' as _i28;
import 'dart:typed_data' as _i30;

import 'package:core/common/failure.dart' as _i17;
import 'package:dartz/dartz.dart' as _i2;
import 'package:flutter/src/widgets/navigator.dart' as _i27;
import 'package:flutter_bloc/flutter_bloc.dart' as _i26;
import 'package:http/http.dart' as _i15;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i29;
import 'package:search/domain/entities/media.dart' as _i25;
import 'package:tv/data/datasources/tv_remote_data_source.dart' as _i20;
import 'package:tv/data/models/tv_detail_model.dart' as _i3;
import 'package:tv/data/models/tv_model.dart' as _i21;
import 'package:tv/domain/entities/tv.dart' as _i18;
import 'package:tv/domain/entities/tv_detail.dart' as _i19;
import 'package:tv/domain/repositories/tv_repository.dart' as _i4;
import 'package:tv/domain/usecases/get_on_the_air_tvs.dart' as _i24;
import 'package:tv/domain/usecases/get_popular_tvs.dart' as _i22;
import 'package:tv/domain/usecases/get_top_rated_tvs.dart' as _i23;
import 'package:tv/domain/usecases/get_tv_detail.dart' as _i6;
import 'package:tv/domain/usecases/get_tv_recommendations.dart' as _i7;
import 'package:tv/presentation/bloc/popular_tvs/popular_tvs_bloc.dart' as _i14;
import 'package:tv/presentation/bloc/top_rated_tvs/top_rated_tvs_bloc.dart'
    as _i13;
import 'package:tv/presentation/bloc/tv_detail/tv_detail_bloc.dart' as _i11;
import 'package:tv/presentation/bloc/tv_list/tv_list_bloc.dart' as _i12;
import 'package:watchlist/domain/repositories/watchlist_repository.dart' as _i5;
import 'package:watchlist/domain/usecases/get_watchlist_status.dart' as _i8;
import 'package:watchlist/domain/usecases/remove_watchlist.dart' as _i10;
import 'package:watchlist/domain/usecases/save_watchlist.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvDetailResponse_1 extends _i1.SmartFake
    implements _i3.TvDetailResponse {
  _FakeTvDetailResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvRepository_2 extends _i1.SmartFake implements _i4.TvRepository {
  _FakeTvRepository_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWatchlistRepository_3 extends _i1.SmartFake
    implements _i5.WatchlistRepository {
  _FakeWatchlistRepository_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTvDetail_4 extends _i1.SmartFake implements _i6.GetTvDetail {
  _FakeGetTvDetail_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTvRecommendations_5 extends _i1.SmartFake
    implements _i7.GetTvRecommendations {
  _FakeGetTvRecommendations_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetWatchlistStatus_6 extends _i1.SmartFake
    implements _i8.GetWatchlistStatus {
  _FakeGetWatchlistStatus_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSaveWatchlistItem_7 extends _i1.SmartFake
    implements _i9.SaveWatchlistItem {
  _FakeSaveWatchlistItem_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRemoveWatchlistItem_8 extends _i1.SmartFake
    implements _i10.RemoveWatchlistItem {
  _FakeRemoveWatchlistItem_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvDetailState_9 extends _i1.SmartFake implements _i11.TvDetailState {
  _FakeTvDetailState_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvListState_10 extends _i1.SmartFake implements _i12.TvListState {
  _FakeTvListState_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTopRatedTvsState_11 extends _i1.SmartFake
    implements _i13.TopRatedTvsState {
  _FakeTopRatedTvsState_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePopularTvsState_12 extends _i1.SmartFake
    implements _i14.PopularTvsState {
  _FakePopularTvsState_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_13 extends _i1.SmartFake implements _i15.Response {
  _FakeResponse_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_14 extends _i1.SmartFake
    implements _i15.StreamedResponse {
  _FakeStreamedResponse_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i4.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>> getOnTheAirTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTvs, []),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Tv>>(
                    this,
                    Invocation.method(#getOnTheAirTvs, []),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>> getPopularTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTvs, []),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Tv>>(
                    this,
                    Invocation.method(#getPopularTvs, []),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>> getTopRatedTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTvs, []),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Tv>>(
                    this,
                    Invocation.method(#getTopRatedTvs, []),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>);

  @override
  _i16.Future<_i2.Either<_i17.Failure, _i19.TvDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvDetail, [id]),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, _i19.TvDetail>>.value(
                  _FakeEither_0<_i17.Failure, _i19.TvDetail>(
                    this,
                    Invocation.method(#getTvDetail, [id]),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, _i19.TvDetail>>);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>> getTvRecommendations(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTvRecommendations, [id]),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Tv>>(
                    this,
                    Invocation.method(#getTvRecommendations, [id]),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>> searchTvs(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchTvs, [query]),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Tv>>(
                    this,
                    Invocation.method(#searchTvs, [query]),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i20.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Future<List<_i21.TvModel>> getOnTheAirTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTvs, []),
            returnValue: _i16.Future<List<_i21.TvModel>>.value(
              <_i21.TvModel>[],
            ),
          )
          as _i16.Future<List<_i21.TvModel>>);

  @override
  _i16.Future<List<_i21.TvModel>> getPopularTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTvs, []),
            returnValue: _i16.Future<List<_i21.TvModel>>.value(
              <_i21.TvModel>[],
            ),
          )
          as _i16.Future<List<_i21.TvModel>>);

  @override
  _i16.Future<List<_i21.TvModel>> getTopRatedTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTvs, []),
            returnValue: _i16.Future<List<_i21.TvModel>>.value(
              <_i21.TvModel>[],
            ),
          )
          as _i16.Future<List<_i21.TvModel>>);

  @override
  _i16.Future<_i3.TvDetailResponse> getTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvDetail, [id]),
            returnValue: _i16.Future<_i3.TvDetailResponse>.value(
              _FakeTvDetailResponse_1(
                this,
                Invocation.method(#getTvDetail, [id]),
              ),
            ),
          )
          as _i16.Future<_i3.TvDetailResponse>);

  @override
  _i16.Future<List<_i21.TvModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvRecommendations, [id]),
            returnValue: _i16.Future<List<_i21.TvModel>>.value(
              <_i21.TvModel>[],
            ),
          )
          as _i16.Future<List<_i21.TvModel>>);

  @override
  _i16.Future<List<_i21.TvModel>> searchTvs(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchTvs, [query]),
            returnValue: _i16.Future<List<_i21.TvModel>>.value(
              <_i21.TvModel>[],
            ),
          )
          as _i16.Future<List<_i21.TvModel>>);
}

/// A class which mocks [GetPopularTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTvs extends _i1.Mock implements _i22.GetPopularTvs {
  MockGetPopularTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>);
}

/// A class which mocks [GetTopRatedTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTvs extends _i1.Mock implements _i23.GetTopRatedTvs {
  MockGetTopRatedTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>);
}

/// A class which mocks [GetOnTheAirTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOnTheAirTvs extends _i1.Mock implements _i24.GetOnTheAirTvs {
  MockGetOnTheAirTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>);
}

/// A class which mocks [GetTvDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvDetail extends _i1.Mock implements _i6.GetTvDetail {
  MockGetTvDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i16.Future<_i2.Either<_i17.Failure, _i19.TvDetail>> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, _i19.TvDetail>>.value(
                  _FakeEither_0<_i17.Failure, _i19.TvDetail>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, _i19.TvDetail>>);
}

/// A class which mocks [GetTvRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvRecommendations extends _i1.Mock
    implements _i7.GetTvRecommendations {
  MockGetTvRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>> execute(dynamic id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Tv>>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Tv>>>);
}

/// A class which mocks [GetWatchlistStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistStatus extends _i1.Mock
    implements _i8.GetWatchlistStatus {
  MockGetWatchlistStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.WatchlistRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeWatchlistRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.WatchlistRepository);

  @override
  _i16.Future<bool> execute(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id, mediaType]),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);
}

/// A class which mocks [SaveWatchlistItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistItem extends _i1.Mock implements _i9.SaveWatchlistItem {
  MockSaveWatchlistItem() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.WatchlistRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeWatchlistRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.WatchlistRepository);

  @override
  _i16.Future<_i2.Either<_i17.Failure, String>> execute(_i25.Media? item) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [item]),
            returnValue: _i16.Future<_i2.Either<_i17.Failure, String>>.value(
              _FakeEither_0<_i17.Failure, String>(
                this,
                Invocation.method(#execute, [item]),
              ),
            ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistItem extends _i1.Mock
    implements _i10.RemoveWatchlistItem {
  MockRemoveWatchlistItem() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.WatchlistRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeWatchlistRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.WatchlistRepository);

  @override
  _i16.Future<_i2.Either<_i17.Failure, String>> execute(
    int? id,
    String? mediaType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id, mediaType]),
            returnValue: _i16.Future<_i2.Either<_i17.Failure, String>>.value(
              _FakeEither_0<_i17.Failure, String>(
                this,
                Invocation.method(#execute, [id, mediaType]),
              ),
            ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, String>>);
}

/// A class which mocks [TvDetailBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDetailBloc extends _i1.Mock implements _i11.TvDetailBloc {
  MockTvDetailBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.GetTvDetail get getTvDetail =>
      (super.noSuchMethod(
            Invocation.getter(#getTvDetail),
            returnValue: _FakeGetTvDetail_4(
              this,
              Invocation.getter(#getTvDetail),
            ),
          )
          as _i6.GetTvDetail);

  @override
  _i7.GetTvRecommendations get getTvRecommendations =>
      (super.noSuchMethod(
            Invocation.getter(#getTvRecommendations),
            returnValue: _FakeGetTvRecommendations_5(
              this,
              Invocation.getter(#getTvRecommendations),
            ),
          )
          as _i7.GetTvRecommendations);

  @override
  _i8.GetWatchlistStatus get getWatchlistStatus =>
      (super.noSuchMethod(
            Invocation.getter(#getWatchlistStatus),
            returnValue: _FakeGetWatchlistStatus_6(
              this,
              Invocation.getter(#getWatchlistStatus),
            ),
          )
          as _i8.GetWatchlistStatus);

  @override
  _i9.SaveWatchlistItem get saveWatchlistItem =>
      (super.noSuchMethod(
            Invocation.getter(#saveWatchlistItem),
            returnValue: _FakeSaveWatchlistItem_7(
              this,
              Invocation.getter(#saveWatchlistItem),
            ),
          )
          as _i9.SaveWatchlistItem);

  @override
  _i10.RemoveWatchlistItem get removeWatchlistItem =>
      (super.noSuchMethod(
            Invocation.getter(#removeWatchlistItem),
            returnValue: _FakeRemoveWatchlistItem_8(
              this,
              Invocation.getter(#removeWatchlistItem),
            ),
          )
          as _i10.RemoveWatchlistItem);

  @override
  _i11.TvDetailState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeTvDetailState_9(this, Invocation.getter(#state)),
          )
          as _i11.TvDetailState);

  @override
  _i16.Stream<_i11.TvDetailState> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i16.Stream<_i11.TvDetailState>.empty(),
          )
          as _i16.Stream<_i11.TvDetailState>);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  void add(_i11.TvDetailEvent? event) => super.noSuchMethod(
    Invocation.method(#add, [event]),
    returnValueForMissingStub: null,
  );

  @override
  void onEvent(_i11.TvDetailEvent? event) => super.noSuchMethod(
    Invocation.method(#onEvent, [event]),
    returnValueForMissingStub: null,
  );

  @override
  void emit(_i11.TvDetailState? state) => super.noSuchMethod(
    Invocation.method(#emit, [state]),
    returnValueForMissingStub: null,
  );

  @override
  void on<E extends _i11.TvDetailEvent>(
    _i26.EventHandler<E, _i11.TvDetailState>? handler, {
    _i26.EventTransformer<E>? transformer,
  }) => super.noSuchMethod(
    Invocation.method(#on, [handler], {#transformer: transformer}),
    returnValueForMissingStub: null,
  );

  @override
  void onTransition(
    _i26.Transition<_i11.TvDetailEvent, _i11.TvDetailState>? transition,
  ) => super.noSuchMethod(
    Invocation.method(#onTransition, [transition]),
    returnValueForMissingStub: null,
  );

  @override
  _i16.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  void onChange(_i26.Change<_i11.TvDetailState>? change) => super.noSuchMethod(
    Invocation.method(#onChange, [change]),
    returnValueForMissingStub: null,
  );

  @override
  void addError(Object? error, [StackTrace? stackTrace]) => super.noSuchMethod(
    Invocation.method(#addError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  void onError(Object? error, StackTrace? stackTrace) => super.noSuchMethod(
    Invocation.method(#onError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [TvListBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvListBloc extends _i1.Mock implements _i12.TvListBloc {
  MockTvListBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.TvListState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeTvListState_10(this, Invocation.getter(#state)),
          )
          as _i12.TvListState);

  @override
  _i16.Stream<_i12.TvListState> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i16.Stream<_i12.TvListState>.empty(),
          )
          as _i16.Stream<_i12.TvListState>);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  void add(_i12.TvListEvent? event) => super.noSuchMethod(
    Invocation.method(#add, [event]),
    returnValueForMissingStub: null,
  );

  @override
  void onEvent(_i12.TvListEvent? event) => super.noSuchMethod(
    Invocation.method(#onEvent, [event]),
    returnValueForMissingStub: null,
  );

  @override
  void emit(_i12.TvListState? state) => super.noSuchMethod(
    Invocation.method(#emit, [state]),
    returnValueForMissingStub: null,
  );

  @override
  void on<E extends _i12.TvListEvent>(
    _i26.EventHandler<E, _i12.TvListState>? handler, {
    _i26.EventTransformer<E>? transformer,
  }) => super.noSuchMethod(
    Invocation.method(#on, [handler], {#transformer: transformer}),
    returnValueForMissingStub: null,
  );

  @override
  void onTransition(
    _i26.Transition<_i12.TvListEvent, _i12.TvListState>? transition,
  ) => super.noSuchMethod(
    Invocation.method(#onTransition, [transition]),
    returnValueForMissingStub: null,
  );

  @override
  _i16.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  void onChange(_i26.Change<_i12.TvListState>? change) => super.noSuchMethod(
    Invocation.method(#onChange, [change]),
    returnValueForMissingStub: null,
  );

  @override
  void addError(Object? error, [StackTrace? stackTrace]) => super.noSuchMethod(
    Invocation.method(#addError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  void onError(Object? error, StackTrace? stackTrace) => super.noSuchMethod(
    Invocation.method(#onError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [NavigatorObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigatorObserver extends _i1.Mock implements _i27.NavigatorObserver {
  MockNavigatorObserver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void didPush(
    _i27.Route<dynamic>? route,
    _i27.Route<dynamic>? previousRoute,
  ) => super.noSuchMethod(
    Invocation.method(#didPush, [route, previousRoute]),
    returnValueForMissingStub: null,
  );

  @override
  void didPop(_i27.Route<dynamic>? route, _i27.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(
        Invocation.method(#didPop, [route, previousRoute]),
        returnValueForMissingStub: null,
      );

  @override
  void didRemove(
    _i27.Route<dynamic>? route,
    _i27.Route<dynamic>? previousRoute,
  ) => super.noSuchMethod(
    Invocation.method(#didRemove, [route, previousRoute]),
    returnValueForMissingStub: null,
  );

  @override
  void didReplace({
    _i27.Route<dynamic>? newRoute,
    _i27.Route<dynamic>? oldRoute,
  }) => super.noSuchMethod(
    Invocation.method(#didReplace, [], {
      #newRoute: newRoute,
      #oldRoute: oldRoute,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void didChangeTop(
    _i27.Route<dynamic>? topRoute,
    _i27.Route<dynamic>? previousTopRoute,
  ) => super.noSuchMethod(
    Invocation.method(#didChangeTop, [topRoute, previousTopRoute]),
    returnValueForMissingStub: null,
  );

  @override
  void didStartUserGesture(
    _i27.Route<dynamic>? route,
    _i27.Route<dynamic>? previousRoute,
  ) => super.noSuchMethod(
    Invocation.method(#didStartUserGesture, [route, previousRoute]),
    returnValueForMissingStub: null,
  );

  @override
  void didStopUserGesture() => super.noSuchMethod(
    Invocation.method(#didStopUserGesture, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [TopRatedTvsBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockTopRatedTvsBloc extends _i1.Mock implements _i13.TopRatedTvsBloc {
  MockTopRatedTvsBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.TopRatedTvsState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeTopRatedTvsState_11(
              this,
              Invocation.getter(#state),
            ),
          )
          as _i13.TopRatedTvsState);

  @override
  _i16.Stream<_i13.TopRatedTvsState> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i16.Stream<_i13.TopRatedTvsState>.empty(),
          )
          as _i16.Stream<_i13.TopRatedTvsState>);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  void add(_i13.TopRatedTvsEvent? event) => super.noSuchMethod(
    Invocation.method(#add, [event]),
    returnValueForMissingStub: null,
  );

  @override
  void onEvent(_i13.TopRatedTvsEvent? event) => super.noSuchMethod(
    Invocation.method(#onEvent, [event]),
    returnValueForMissingStub: null,
  );

  @override
  void emit(_i13.TopRatedTvsState? state) => super.noSuchMethod(
    Invocation.method(#emit, [state]),
    returnValueForMissingStub: null,
  );

  @override
  void on<E extends _i13.TopRatedTvsEvent>(
    _i26.EventHandler<E, _i13.TopRatedTvsState>? handler, {
    _i26.EventTransformer<E>? transformer,
  }) => super.noSuchMethod(
    Invocation.method(#on, [handler], {#transformer: transformer}),
    returnValueForMissingStub: null,
  );

  @override
  void onTransition(
    _i26.Transition<_i13.TopRatedTvsEvent, _i13.TopRatedTvsState>? transition,
  ) => super.noSuchMethod(
    Invocation.method(#onTransition, [transition]),
    returnValueForMissingStub: null,
  );

  @override
  _i16.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  void onChange(_i26.Change<_i13.TopRatedTvsState>? change) =>
      super.noSuchMethod(
        Invocation.method(#onChange, [change]),
        returnValueForMissingStub: null,
      );

  @override
  void addError(Object? error, [StackTrace? stackTrace]) => super.noSuchMethod(
    Invocation.method(#addError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  void onError(Object? error, StackTrace? stackTrace) => super.noSuchMethod(
    Invocation.method(#onError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [PopularTvsBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularTvsBloc extends _i1.Mock implements _i14.PopularTvsBloc {
  MockPopularTvsBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.PopularTvsState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakePopularTvsState_12(
              this,
              Invocation.getter(#state),
            ),
          )
          as _i14.PopularTvsState);

  @override
  _i16.Stream<_i14.PopularTvsState> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i16.Stream<_i14.PopularTvsState>.empty(),
          )
          as _i16.Stream<_i14.PopularTvsState>);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  void add(_i14.PopularTvsEvent? event) => super.noSuchMethod(
    Invocation.method(#add, [event]),
    returnValueForMissingStub: null,
  );

  @override
  void onEvent(_i14.PopularTvsEvent? event) => super.noSuchMethod(
    Invocation.method(#onEvent, [event]),
    returnValueForMissingStub: null,
  );

  @override
  void emit(_i14.PopularTvsState? state) => super.noSuchMethod(
    Invocation.method(#emit, [state]),
    returnValueForMissingStub: null,
  );

  @override
  void on<E extends _i14.PopularTvsEvent>(
    _i26.EventHandler<E, _i14.PopularTvsState>? handler, {
    _i26.EventTransformer<E>? transformer,
  }) => super.noSuchMethod(
    Invocation.method(#on, [handler], {#transformer: transformer}),
    returnValueForMissingStub: null,
  );

  @override
  void onTransition(
    _i26.Transition<_i14.PopularTvsEvent, _i14.PopularTvsState>? transition,
  ) => super.noSuchMethod(
    Invocation.method(#onTransition, [transition]),
    returnValueForMissingStub: null,
  );

  @override
  _i16.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  void onChange(_i26.Change<_i14.PopularTvsState>? change) =>
      super.noSuchMethod(
        Invocation.method(#onChange, [change]),
        returnValueForMissingStub: null,
      );

  @override
  void addError(Object? error, [StackTrace? stackTrace]) => super.noSuchMethod(
    Invocation.method(#addError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  void onError(Object? error, StackTrace? stackTrace) => super.noSuchMethod(
    Invocation.method(#onError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [WatchlistRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistRepository extends _i1.Mock
    implements _i5.WatchlistRepository {
  MockWatchlistRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Future<_i2.Either<_i17.Failure, String>> saveWatchlist(
    _i25.Media? item,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveWatchlist, [item]),
            returnValue: _i16.Future<_i2.Either<_i17.Failure, String>>.value(
              _FakeEither_0<_i17.Failure, String>(
                this,
                Invocation.method(#saveWatchlist, [item]),
              ),
            ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, String>>);

  @override
  _i16.Future<_i2.Either<_i17.Failure, String>> removeWatchlist(
    int? id,
    String? mediaType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [id, mediaType]),
            returnValue: _i16.Future<_i2.Either<_i17.Failure, String>>.value(
              _FakeEither_0<_i17.Failure, String>(
                this,
                Invocation.method(#removeWatchlist, [id, mediaType]),
              ),
            ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, String>>);

  @override
  _i16.Future<bool> isAddedToWatchlist(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#isAddedToWatchlist, [id, mediaType]),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i25.Media>>> getWatchlist() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlist, []),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i25.Media>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i25.Media>>(
                    this,
                    Invocation.method(#getWatchlist, []),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i25.Media>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i15.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Future<_i15.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i16.Future<_i15.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i16.Future<_i15.Response>);

  @override
  _i16.Future<_i15.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i16.Future<_i15.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i16.Future<_i15.Response>);

  @override
  _i16.Future<_i15.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i28.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i16.Future<_i15.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i16.Future<_i15.Response>);

  @override
  _i16.Future<_i15.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i28.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i16.Future<_i15.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i16.Future<_i15.Response>);

  @override
  _i16.Future<_i15.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i28.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i16.Future<_i15.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i16.Future<_i15.Response>);

  @override
  _i16.Future<_i15.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i28.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i16.Future<_i15.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i16.Future<_i15.Response>);

  @override
  _i16.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i16.Future<String>.value(
              _i29.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i16.Future<String>);

  @override
  _i16.Future<_i30.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i16.Future<_i30.Uint8List>.value(_i30.Uint8List(0)),
          )
          as _i16.Future<_i30.Uint8List>);

  @override
  _i16.Future<_i15.StreamedResponse> send(_i15.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i16.Future<_i15.StreamedResponse>.value(
              _FakeStreamedResponse_14(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i16.Future<_i15.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}
