// Mocks generated by Mockito 5.4.6 from annotations
// in movie/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i16;
import 'dart:convert' as _i30;
import 'dart:typed_data' as _i31;
import 'dart:ui' as _i25;

import 'package:core/common/failure.dart' as _i17;
import 'package:core/common/state_enum.dart' as _i23;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i15;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i24;
import 'package:movie/data/datasources/movie_remote_data_source.dart' as _i19;
import 'package:movie/data/models/movie_detail_model.dart' as _i3;
import 'package:movie/data/models/movie_model.dart' as _i20;
import 'package:movie/domain/entities/movie.dart' as _i18;
import 'package:movie/domain/entities/movie_detail.dart' as _i7;
import 'package:movie/domain/repositories/movie_repository.dart' as _i4;
import 'package:movie/domain/usecases/get_movie_detail.dart' as _i5;
import 'package:movie/domain/usecases/get_movie_recommendations.dart' as _i6;
import 'package:movie/domain/usecases/get_now_playing_movies.dart' as _i21;
import 'package:movie/domain/usecases/get_popular_movies.dart' as _i8;
import 'package:movie/domain/usecases/get_top_rated_movies.dart' as _i9;
import 'package:movie/presentation/provider/movie_detail_notifier.dart' as _i22;
import 'package:movie/presentation/provider/popular_movies_notifier.dart'
    as _i26;
import 'package:movie/presentation/provider/top_rated_movies_notifier.dart'
    as _i27;
import 'package:search/domain/entities/media.dart' as _i29;
import 'package:watchlist/domain/repositories/watchlist_repository.dart'
    as _i14;
import 'package:watchlist/domain/usecases/get_watchlist_items.dart' as _i10;
import 'package:watchlist/domain/usecases/get_watchlist_status.dart' as _i13;
import 'package:watchlist/domain/usecases/remove_watchlist.dart' as _i12;
import 'package:watchlist/domain/usecases/save_watchlist.dart' as _i11;
import 'package:watchlist/presentation/provider/watchlist_notifier.dart'
    as _i28;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMovieDetailResponse_1 extends _i1.SmartFake
    implements _i3.MovieDetailResponse {
  _FakeMovieDetailResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMovieRepository_2 extends _i1.SmartFake
    implements _i4.MovieRepository {
  _FakeMovieRepository_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetMovieDetail_3 extends _i1.SmartFake
    implements _i5.GetMovieDetail {
  _FakeGetMovieDetail_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetMovieRecommendations_4 extends _i1.SmartFake
    implements _i6.GetMovieRecommendations {
  _FakeGetMovieRecommendations_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMovieDetail_5 extends _i1.SmartFake implements _i7.MovieDetail {
  _FakeMovieDetail_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetPopularMovies_6 extends _i1.SmartFake
    implements _i8.GetPopularMovies {
  _FakeGetPopularMovies_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTopRatedMovies_7 extends _i1.SmartFake
    implements _i9.GetTopRatedMovies {
  _FakeGetTopRatedMovies_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetWatchlistItems_8 extends _i1.SmartFake
    implements _i10.GetWatchlistItems {
  _FakeGetWatchlistItems_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSaveWatchlistItem_9 extends _i1.SmartFake
    implements _i11.SaveWatchlistItem {
  _FakeSaveWatchlistItem_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRemoveWatchlistItem_10 extends _i1.SmartFake
    implements _i12.RemoveWatchlistItem {
  _FakeRemoveWatchlistItem_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetWatchlistStatus_11 extends _i1.SmartFake
    implements _i13.GetWatchlistStatus {
  _FakeGetWatchlistStatus_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWatchlistRepository_12 extends _i1.SmartFake
    implements _i14.WatchlistRepository {
  _FakeWatchlistRepository_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_13 extends _i1.SmartFake implements _i15.Response {
  _FakeResponse_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_14 extends _i1.SmartFake
    implements _i15.StreamedResponse {
  _FakeStreamedResponse_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i4.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>
  getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Movie>>(
                    this,
                    Invocation.method(#getNowPlayingMovies, []),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Movie>>(
                    this,
                    Invocation.method(#getPopularMovies, []),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Movie>>(
                    this,
                    Invocation.method(#getTopRatedMovies, []),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>);

  @override
  _i16.Future<_i2.Either<_i17.Failure, _i7.MovieDetail>> getMovieDetail(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, _i7.MovieDetail>>.value(
                  _FakeEither_0<_i17.Failure, _i7.MovieDetail>(
                    this,
                    Invocation.method(#getMovieDetail, [id]),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, _i7.MovieDetail>>);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>
  getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Movie>>(
                    this,
                    Invocation.method(#getMovieRecommendations, [id]),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>> searchMovies(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Movie>>(
                    this,
                    Invocation.method(#searchMovies, [query]),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i19.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Future<List<_i20.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue: _i16.Future<List<_i20.MovieModel>>.value(
              <_i20.MovieModel>[],
            ),
          )
          as _i16.Future<List<_i20.MovieModel>>);

  @override
  _i16.Future<List<_i20.MovieModel>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue: _i16.Future<List<_i20.MovieModel>>.value(
              <_i20.MovieModel>[],
            ),
          )
          as _i16.Future<List<_i20.MovieModel>>);

  @override
  _i16.Future<List<_i20.MovieModel>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue: _i16.Future<List<_i20.MovieModel>>.value(
              <_i20.MovieModel>[],
            ),
          )
          as _i16.Future<List<_i20.MovieModel>>);

  @override
  _i16.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue: _i16.Future<_i3.MovieDetailResponse>.value(
              _FakeMovieDetailResponse_1(
                this,
                Invocation.method(#getMovieDetail, [id]),
              ),
            ),
          )
          as _i16.Future<_i3.MovieDetailResponse>);

  @override
  _i16.Future<List<_i20.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue: _i16.Future<List<_i20.MovieModel>>.value(
              <_i20.MovieModel>[],
            ),
          )
          as _i16.Future<List<_i20.MovieModel>>);

  @override
  _i16.Future<List<_i20.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue: _i16.Future<List<_i20.MovieModel>>.value(
              <_i20.MovieModel>[],
            ),
          )
          as _i16.Future<List<_i20.MovieModel>>);
}

/// A class which mocks [GetMovieDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetail extends _i1.Mock implements _i5.GetMovieDetail {
  MockGetMovieDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.MovieRepository);

  @override
  _i16.Future<_i2.Either<_i17.Failure, _i7.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, _i7.MovieDetail>>.value(
                  _FakeEither_0<_i17.Failure, _i7.MovieDetail>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, _i7.MovieDetail>>);
}

/// A class which mocks [GetMovieRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieRecommendations extends _i1.Mock
    implements _i6.GetMovieRecommendations {
  MockGetMovieRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.MovieRepository);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>> execute(dynamic id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Movie>>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>);
}

/// A class which mocks [GetNowPlayingMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingMovies extends _i1.Mock
    implements _i21.GetNowPlayingMovies {
  MockGetNowPlayingMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.MovieRepository);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>);
}

/// A class which mocks [GetPopularMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularMovies extends _i1.Mock implements _i8.GetPopularMovies {
  MockGetPopularMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.MovieRepository);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>);
}

/// A class which mocks [GetTopRatedMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedMovies extends _i1.Mock implements _i9.GetTopRatedMovies {
  MockGetTopRatedMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.MovieRepository);

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i18.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i18.Movie>>>);
}

/// A class which mocks [MovieDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDetailNotifier extends _i1.Mock
    implements _i22.MovieDetailNotifier {
  MockMovieDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.GetMovieDetail get getMovieDetail =>
      (super.noSuchMethod(
            Invocation.getter(#getMovieDetail),
            returnValue: _FakeGetMovieDetail_3(
              this,
              Invocation.getter(#getMovieDetail),
            ),
          )
          as _i5.GetMovieDetail);

  @override
  _i6.GetMovieRecommendations get getMovieRecommendations =>
      (super.noSuchMethod(
            Invocation.getter(#getMovieRecommendations),
            returnValue: _FakeGetMovieRecommendations_4(
              this,
              Invocation.getter(#getMovieRecommendations),
            ),
          )
          as _i6.GetMovieRecommendations);

  @override
  _i7.MovieDetail get movie =>
      (super.noSuchMethod(
            Invocation.getter(#movie),
            returnValue: _FakeMovieDetail_5(this, Invocation.getter(#movie)),
          )
          as _i7.MovieDetail);

  @override
  _i23.RequestState get movieState =>
      (super.noSuchMethod(
            Invocation.getter(#movieState),
            returnValue: _i23.RequestState.Empty,
          )
          as _i23.RequestState);

  @override
  List<_i18.Movie> get movieRecommendations =>
      (super.noSuchMethod(
            Invocation.getter(#movieRecommendations),
            returnValue: <_i18.Movie>[],
          )
          as List<_i18.Movie>);

  @override
  _i23.RequestState get recommendationState =>
      (super.noSuchMethod(
            Invocation.getter(#recommendationState),
            returnValue: _i23.RequestState.Empty,
          )
          as _i23.RequestState);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i24.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  String get watchlistMessage =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistMessage),
            returnValue: _i24.dummyValue<String>(
              this,
              Invocation.getter(#watchlistMessage),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i16.Future<void> fetchMovieDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#fetchMovieDetail, [id]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  void addListener(_i25.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i25.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [PopularMoviesNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularMoviesNotifier extends _i1.Mock
    implements _i26.PopularMoviesNotifier {
  MockPopularMoviesNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.GetPopularMovies get getPopularMovies =>
      (super.noSuchMethod(
            Invocation.getter(#getPopularMovies),
            returnValue: _FakeGetPopularMovies_6(
              this,
              Invocation.getter(#getPopularMovies),
            ),
          )
          as _i8.GetPopularMovies);

  @override
  _i23.RequestState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i23.RequestState.Empty,
          )
          as _i23.RequestState);

  @override
  List<_i18.Movie> get movies =>
      (super.noSuchMethod(
            Invocation.getter(#movies),
            returnValue: <_i18.Movie>[],
          )
          as List<_i18.Movie>);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i24.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i16.Future<void> fetchPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPopularMovies, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  void addListener(_i25.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i25.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [TopRatedMoviesNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTopRatedMoviesNotifier extends _i1.Mock
    implements _i27.TopRatedMoviesNotifier {
  MockTopRatedMoviesNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.GetTopRatedMovies get getTopRatedMovies =>
      (super.noSuchMethod(
            Invocation.getter(#getTopRatedMovies),
            returnValue: _FakeGetTopRatedMovies_7(
              this,
              Invocation.getter(#getTopRatedMovies),
            ),
          )
          as _i9.GetTopRatedMovies);

  @override
  _i23.RequestState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i23.RequestState.Empty,
          )
          as _i23.RequestState);

  @override
  List<_i18.Movie> get movies =>
      (super.noSuchMethod(
            Invocation.getter(#movies),
            returnValue: <_i18.Movie>[],
          )
          as List<_i18.Movie>);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i24.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i16.Future<void> fetchTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#fetchTopRatedMovies, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  void addListener(_i25.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i25.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [WatchlistNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistNotifier extends _i1.Mock implements _i28.WatchlistNotifier {
  MockWatchlistNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.GetWatchlistItems get getWatchlistItems =>
      (super.noSuchMethod(
            Invocation.getter(#getWatchlistItems),
            returnValue: _FakeGetWatchlistItems_8(
              this,
              Invocation.getter(#getWatchlistItems),
            ),
          )
          as _i10.GetWatchlistItems);

  @override
  _i11.SaveWatchlistItem get saveWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#saveWatchlist),
            returnValue: _FakeSaveWatchlistItem_9(
              this,
              Invocation.getter(#saveWatchlist),
            ),
          )
          as _i11.SaveWatchlistItem);

  @override
  _i12.RemoveWatchlistItem get removeWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#removeWatchlist),
            returnValue: _FakeRemoveWatchlistItem_10(
              this,
              Invocation.getter(#removeWatchlist),
            ),
          )
          as _i12.RemoveWatchlistItem);

  @override
  _i13.GetWatchlistStatus get getWatchListStatus =>
      (super.noSuchMethod(
            Invocation.getter(#getWatchListStatus),
            returnValue: _FakeGetWatchlistStatus_11(
              this,
              Invocation.getter(#getWatchListStatus),
            ),
          )
          as _i13.GetWatchlistStatus);

  @override
  List<_i29.Media> get watchlistItems =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistItems),
            returnValue: <_i29.Media>[],
          )
          as List<_i29.Media>);

  @override
  _i23.RequestState get watchlistState =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistState),
            returnValue: _i23.RequestState.Empty,
          )
          as _i23.RequestState);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i24.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#isAddedToWatchlist),
            returnValue: false,
          )
          as bool);

  @override
  String get watchlistMessage =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistMessage),
            returnValue: _i24.dummyValue<String>(
              this,
              Invocation.getter(#watchlistMessage),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i16.Future<void> fetchWatchlistItems() =>
      (super.noSuchMethod(
            Invocation.method(#fetchWatchlistItems, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> addWatchlist(_i29.Media? item) =>
      (super.noSuchMethod(
            Invocation.method(#addWatchlist, [item]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> removeFromWatchlist(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#removeFromWatchlist, [id, mediaType]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> loadWatchlistStatus(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#loadWatchlistStatus, [id, mediaType]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  void addListener(_i25.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i25.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [GetWatchlistItems].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistItems extends _i1.Mock implements _i10.GetWatchlistItems {
  MockGetWatchlistItems() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Future<_i2.Either<_i17.Failure, List<_i29.Media>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i16.Future<_i2.Either<_i17.Failure, List<_i29.Media>>>.value(
                  _FakeEither_0<_i17.Failure, List<_i29.Media>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, List<_i29.Media>>>);
}

/// A class which mocks [GetWatchlistStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistStatus extends _i1.Mock
    implements _i13.GetWatchlistStatus {
  MockGetWatchlistStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.WatchlistRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeWatchlistRepository_12(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i14.WatchlistRepository);

  @override
  _i16.Future<bool> execute(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id, mediaType]),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);
}

/// A class which mocks [SaveWatchlistItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistItem extends _i1.Mock implements _i11.SaveWatchlistItem {
  MockSaveWatchlistItem() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.WatchlistRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeWatchlistRepository_12(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i14.WatchlistRepository);

  @override
  _i16.Future<_i2.Either<_i17.Failure, String>> execute(_i29.Media? item) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [item]),
            returnValue: _i16.Future<_i2.Either<_i17.Failure, String>>.value(
              _FakeEither_0<_i17.Failure, String>(
                this,
                Invocation.method(#execute, [item]),
              ),
            ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistItem extends _i1.Mock
    implements _i12.RemoveWatchlistItem {
  MockRemoveWatchlistItem() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.WatchlistRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeWatchlistRepository_12(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i14.WatchlistRepository);

  @override
  _i16.Future<_i2.Either<_i17.Failure, String>> execute(
    int? id,
    String? mediaType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id, mediaType]),
            returnValue: _i16.Future<_i2.Either<_i17.Failure, String>>.value(
              _FakeEither_0<_i17.Failure, String>(
                this,
                Invocation.method(#execute, [id, mediaType]),
              ),
            ),
          )
          as _i16.Future<_i2.Either<_i17.Failure, String>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i15.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Future<_i15.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i16.Future<_i15.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i16.Future<_i15.Response>);

  @override
  _i16.Future<_i15.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i16.Future<_i15.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i16.Future<_i15.Response>);

  @override
  _i16.Future<_i15.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i30.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i16.Future<_i15.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i16.Future<_i15.Response>);

  @override
  _i16.Future<_i15.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i30.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i16.Future<_i15.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i16.Future<_i15.Response>);

  @override
  _i16.Future<_i15.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i30.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i16.Future<_i15.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i16.Future<_i15.Response>);

  @override
  _i16.Future<_i15.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i30.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i16.Future<_i15.Response>.value(
              _FakeResponse_13(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i16.Future<_i15.Response>);

  @override
  _i16.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i16.Future<String>.value(
              _i24.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i16.Future<String>);

  @override
  _i16.Future<_i31.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i16.Future<_i31.Uint8List>.value(_i31.Uint8List(0)),
          )
          as _i16.Future<_i31.Uint8List>);

  @override
  _i16.Future<_i15.StreamedResponse> send(_i15.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i16.Future<_i15.StreamedResponse>.value(
              _FakeStreamedResponse_14(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i16.Future<_i15.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}
