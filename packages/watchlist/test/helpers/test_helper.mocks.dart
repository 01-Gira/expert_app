// Mocks generated by Mockito 5.4.6 from annotations
// in watchlist/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;
import 'dart:convert' as _i20;
import 'dart:typed_data' as _i21;
import 'dart:ui' as _i19;

import 'package:core/common/failure.dart' as _i12;
import 'package:core/common/state_enum.dart' as _i18;
import 'package:core/data/datasources/db/database_helper.dart' as _i9;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i16;
import 'package:search/domain/entities/media.dart' as _i13;
import 'package:sqflite/sqflite.dart' as _i11;
import 'package:watchlist/data/datasources/watchlist_local_data_source.dart'
    as _i14;
import 'package:watchlist/data/models/watchlist_table.dart' as _i15;
import 'package:watchlist/domain/repositories/watchlist_repository.dart' as _i7;
import 'package:watchlist/domain/usecases/get_watchlist_items.dart' as _i3;
import 'package:watchlist/domain/usecases/get_watchlist_status.dart' as _i6;
import 'package:watchlist/domain/usecases/remove_watchlist.dart' as _i5;
import 'package:watchlist/domain/usecases/save_watchlist.dart' as _i4;
import 'package:watchlist/presentation/provider/watchlist_notifier.dart'
    as _i17;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetWatchlistItems_1 extends _i1.SmartFake
    implements _i3.GetWatchlistItems {
  _FakeGetWatchlistItems_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSaveWatchlistItem_2 extends _i1.SmartFake
    implements _i4.SaveWatchlistItem {
  _FakeSaveWatchlistItem_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRemoveWatchlistItem_3 extends _i1.SmartFake
    implements _i5.RemoveWatchlistItem {
  _FakeRemoveWatchlistItem_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetWatchlistStatus_4 extends _i1.SmartFake
    implements _i6.GetWatchlistStatus {
  _FakeGetWatchlistStatus_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWatchlistRepository_5 extends _i1.SmartFake
    implements _i7.WatchlistRepository {
  _FakeWatchlistRepository_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_6 extends _i1.SmartFake implements _i8.Response {
  _FakeResponse_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_7 extends _i1.SmartFake
    implements _i8.StreamedResponse {
  _FakeStreamedResponse_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i9.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i11.Database?> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i10.Future<_i11.Database?>.value(),
          )
          as _i10.Future<_i11.Database?>);

  @override
  _i10.Future<int> insertWatchlist(Map<String, dynamic>? item) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [item]),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Future<int> removeWatchlist(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [id, mediaType]),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Future<Map<String, dynamic>?> getItemById(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#getItemById, [id, mediaType]),
            returnValue: _i10.Future<Map<String, dynamic>?>.value(),
          )
          as _i10.Future<Map<String, dynamic>?>);

  @override
  _i10.Future<List<Map<String, dynamic>>> getWatchlist() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlist, []),
            returnValue: _i10.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i10.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [WatchlistRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistRepository extends _i1.Mock
    implements _i7.WatchlistRepository {
  MockWatchlistRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i2.Either<_i12.Failure, String>> saveWatchlist(
    _i13.Media? item,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveWatchlist, [item]),
            returnValue: _i10.Future<_i2.Either<_i12.Failure, String>>.value(
              _FakeEither_0<_i12.Failure, String>(
                this,
                Invocation.method(#saveWatchlist, [item]),
              ),
            ),
          )
          as _i10.Future<_i2.Either<_i12.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i12.Failure, String>> removeWatchlist(
    int? id,
    String? mediaType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [id, mediaType]),
            returnValue: _i10.Future<_i2.Either<_i12.Failure, String>>.value(
              _FakeEither_0<_i12.Failure, String>(
                this,
                Invocation.method(#removeWatchlist, [id, mediaType]),
              ),
            ),
          )
          as _i10.Future<_i2.Either<_i12.Failure, String>>);

  @override
  _i10.Future<bool> isAddedToWatchlist(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#isAddedToWatchlist, [id, mediaType]),
            returnValue: _i10.Future<bool>.value(false),
          )
          as _i10.Future<bool>);

  @override
  _i10.Future<_i2.Either<_i12.Failure, List<_i13.Media>>> getWatchlist() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlist, []),
            returnValue:
                _i10.Future<_i2.Either<_i12.Failure, List<_i13.Media>>>.value(
                  _FakeEither_0<_i12.Failure, List<_i13.Media>>(
                    this,
                    Invocation.method(#getWatchlist, []),
                  ),
                ),
          )
          as _i10.Future<_i2.Either<_i12.Failure, List<_i13.Media>>>);
}

/// A class which mocks [WatchlistLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistLocalDataSource extends _i1.Mock
    implements _i14.WatchlistLocalDataSource {
  MockWatchlistLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<String> insertWatchlist(_i15.WatchlistTable? item) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [item]),
            returnValue: _i10.Future<String>.value(
              _i16.dummyValue<String>(
                this,
                Invocation.method(#insertWatchlist, [item]),
              ),
            ),
          )
          as _i10.Future<String>);

  @override
  _i10.Future<String> removeWatchlist(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [id, mediaType]),
            returnValue: _i10.Future<String>.value(
              _i16.dummyValue<String>(
                this,
                Invocation.method(#removeWatchlist, [id, mediaType]),
              ),
            ),
          )
          as _i10.Future<String>);

  @override
  _i10.Future<_i15.WatchlistTable?> getItemById(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#getItemById, [id, mediaType]),
            returnValue: _i10.Future<_i15.WatchlistTable?>.value(),
          )
          as _i10.Future<_i15.WatchlistTable?>);

  @override
  _i10.Future<List<_i15.WatchlistTable>> getWatchlist() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlist, []),
            returnValue: _i10.Future<List<_i15.WatchlistTable>>.value(
              <_i15.WatchlistTable>[],
            ),
          )
          as _i10.Future<List<_i15.WatchlistTable>>);
}

/// A class which mocks [WatchlistNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistNotifier extends _i1.Mock implements _i17.WatchlistNotifier {
  MockWatchlistNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GetWatchlistItems get getWatchlistItems =>
      (super.noSuchMethod(
            Invocation.getter(#getWatchlistItems),
            returnValue: _FakeGetWatchlistItems_1(
              this,
              Invocation.getter(#getWatchlistItems),
            ),
          )
          as _i3.GetWatchlistItems);

  @override
  _i4.SaveWatchlistItem get saveWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#saveWatchlist),
            returnValue: _FakeSaveWatchlistItem_2(
              this,
              Invocation.getter(#saveWatchlist),
            ),
          )
          as _i4.SaveWatchlistItem);

  @override
  _i5.RemoveWatchlistItem get removeWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#removeWatchlist),
            returnValue: _FakeRemoveWatchlistItem_3(
              this,
              Invocation.getter(#removeWatchlist),
            ),
          )
          as _i5.RemoveWatchlistItem);

  @override
  _i6.GetWatchlistStatus get getWatchListStatus =>
      (super.noSuchMethod(
            Invocation.getter(#getWatchListStatus),
            returnValue: _FakeGetWatchlistStatus_4(
              this,
              Invocation.getter(#getWatchListStatus),
            ),
          )
          as _i6.GetWatchlistStatus);

  @override
  List<_i13.Media> get watchlistItems =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistItems),
            returnValue: <_i13.Media>[],
          )
          as List<_i13.Media>);

  @override
  _i18.RequestState get watchlistState =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistState),
            returnValue: _i18.RequestState.Empty,
          )
          as _i18.RequestState);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i16.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#isAddedToWatchlist),
            returnValue: false,
          )
          as bool);

  @override
  String get watchlistMessage =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistMessage),
            returnValue: _i16.dummyValue<String>(
              this,
              Invocation.getter(#watchlistMessage),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i10.Future<void> fetchWatchlistItems() =>
      (super.noSuchMethod(
            Invocation.method(#fetchWatchlistItems, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> addWatchlist(_i13.Media? item) =>
      (super.noSuchMethod(
            Invocation.method(#addWatchlist, [item]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> removeFromWatchlist(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#removeFromWatchlist, [id, mediaType]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> loadWatchlistStatus(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#loadWatchlistStatus, [id, mediaType]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  void addListener(_i19.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i19.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [GetWatchlistItems].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistItems extends _i1.Mock implements _i3.GetWatchlistItems {
  MockGetWatchlistItems() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i2.Either<_i12.Failure, List<_i13.Media>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i10.Future<_i2.Either<_i12.Failure, List<_i13.Media>>>.value(
                  _FakeEither_0<_i12.Failure, List<_i13.Media>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i10.Future<_i2.Either<_i12.Failure, List<_i13.Media>>>);
}

/// A class which mocks [GetWatchlistStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistStatus extends _i1.Mock
    implements _i6.GetWatchlistStatus {
  MockGetWatchlistStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.WatchlistRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeWatchlistRepository_5(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i7.WatchlistRepository);

  @override
  _i10.Future<bool> execute(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id, mediaType]),
            returnValue: _i10.Future<bool>.value(false),
          )
          as _i10.Future<bool>);
}

/// A class which mocks [SaveWatchlistItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistItem extends _i1.Mock implements _i4.SaveWatchlistItem {
  MockSaveWatchlistItem() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.WatchlistRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeWatchlistRepository_5(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i7.WatchlistRepository);

  @override
  _i10.Future<_i2.Either<_i12.Failure, String>> execute(_i13.Media? item) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [item]),
            returnValue: _i10.Future<_i2.Either<_i12.Failure, String>>.value(
              _FakeEither_0<_i12.Failure, String>(
                this,
                Invocation.method(#execute, [item]),
              ),
            ),
          )
          as _i10.Future<_i2.Either<_i12.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistItem extends _i1.Mock
    implements _i5.RemoveWatchlistItem {
  MockRemoveWatchlistItem() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.WatchlistRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeWatchlistRepository_5(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i7.WatchlistRepository);

  @override
  _i10.Future<_i2.Either<_i12.Failure, String>> execute(
    int? id,
    String? mediaType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id, mediaType]),
            returnValue: _i10.Future<_i2.Either<_i12.Failure, String>>.value(
              _FakeEither_0<_i12.Failure, String>(
                this,
                Invocation.method(#execute, [id, mediaType]),
              ),
            ),
          )
          as _i10.Future<_i2.Either<_i12.Failure, String>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i8.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i8.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i10.Future<_i8.Response>.value(
              _FakeResponse_6(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i10.Future<_i8.Response>.value(
              _FakeResponse_6(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i20.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i10.Future<_i8.Response>.value(
              _FakeResponse_6(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i20.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i10.Future<_i8.Response>.value(
              _FakeResponse_6(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i20.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i10.Future<_i8.Response>.value(
              _FakeResponse_6(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i20.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i10.Future<_i8.Response>.value(
              _FakeResponse_6(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i10.Future<_i8.Response>);

  @override
  _i10.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i10.Future<String>.value(
              _i16.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i10.Future<String>);

  @override
  _i10.Future<_i21.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i10.Future<_i21.Uint8List>.value(_i21.Uint8List(0)),
          )
          as _i10.Future<_i21.Uint8List>);

  @override
  _i10.Future<_i8.StreamedResponse> send(_i8.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i10.Future<_i8.StreamedResponse>.value(
              _FakeStreamedResponse_7(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i10.Future<_i8.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}
