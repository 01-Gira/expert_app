// Mocks generated by Mockito 5.4.6 from annotations
// in expert_app/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;
import 'dart:ui' as _i13;

import 'package:core/common/state_enum.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;
import 'package:movie/domain/entities/movie.dart' as _i9;
import 'package:movie/domain/usecases/get_now_playing_movies.dart' as _i2;
import 'package:movie/domain/usecases/get_popular_movies.dart' as _i3;
import 'package:movie/domain/usecases/get_top_rated_movies.dart' as _i4;
import 'package:movie/presentation/provider/movie_list_notifier.dart' as _i8;
import 'package:tv/domain/entities/tv.dart' as _i15;
import 'package:tv/domain/usecases/get_on_the_air_tvs.dart' as _i5;
import 'package:tv/domain/usecases/get_popular_tvs.dart' as _i6;
import 'package:tv/domain/usecases/get_top_rated_tvs.dart' as _i7;
import 'package:tv/presentation/provider/tv_list_notifier.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetNowPlayingMovies_0 extends _i1.SmartFake
    implements _i2.GetNowPlayingMovies {
  _FakeGetNowPlayingMovies_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetPopularMovies_1 extends _i1.SmartFake
    implements _i3.GetPopularMovies {
  _FakeGetPopularMovies_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTopRatedMovies_2 extends _i1.SmartFake
    implements _i4.GetTopRatedMovies {
  _FakeGetTopRatedMovies_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetOnTheAirTvs_3 extends _i1.SmartFake
    implements _i5.GetOnTheAirTvs {
  _FakeGetOnTheAirTvs_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetPopularTvs_4 extends _i1.SmartFake implements _i6.GetPopularTvs {
  _FakeGetPopularTvs_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTopRatedTvs_5 extends _i1.SmartFake
    implements _i7.GetTopRatedTvs {
  _FakeGetTopRatedTvs_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MovieListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieListNotifier extends _i1.Mock implements _i8.MovieListNotifier {
  MockMovieListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetNowPlayingMovies get getNowPlayingMovies =>
      (super.noSuchMethod(
            Invocation.getter(#getNowPlayingMovies),
            returnValue: _FakeGetNowPlayingMovies_0(
              this,
              Invocation.getter(#getNowPlayingMovies),
            ),
          )
          as _i2.GetNowPlayingMovies);

  @override
  _i3.GetPopularMovies get getPopularMovies =>
      (super.noSuchMethod(
            Invocation.getter(#getPopularMovies),
            returnValue: _FakeGetPopularMovies_1(
              this,
              Invocation.getter(#getPopularMovies),
            ),
          )
          as _i3.GetPopularMovies);

  @override
  _i4.GetTopRatedMovies get getTopRatedMovies =>
      (super.noSuchMethod(
            Invocation.getter(#getTopRatedMovies),
            returnValue: _FakeGetTopRatedMovies_2(
              this,
              Invocation.getter(#getTopRatedMovies),
            ),
          )
          as _i4.GetTopRatedMovies);

  @override
  List<_i9.Movie> get nowPlayingMovies =>
      (super.noSuchMethod(
            Invocation.getter(#nowPlayingMovies),
            returnValue: <_i9.Movie>[],
          )
          as List<_i9.Movie>);

  @override
  _i10.RequestState get nowPlayingState =>
      (super.noSuchMethod(
            Invocation.getter(#nowPlayingState),
            returnValue: _i10.RequestState.Empty,
          )
          as _i10.RequestState);

  @override
  List<_i9.Movie> get popularMovies =>
      (super.noSuchMethod(
            Invocation.getter(#popularMovies),
            returnValue: <_i9.Movie>[],
          )
          as List<_i9.Movie>);

  @override
  _i10.RequestState get popularMoviesState =>
      (super.noSuchMethod(
            Invocation.getter(#popularMoviesState),
            returnValue: _i10.RequestState.Empty,
          )
          as _i10.RequestState);

  @override
  List<_i9.Movie> get topRatedMovies =>
      (super.noSuchMethod(
            Invocation.getter(#topRatedMovies),
            returnValue: <_i9.Movie>[],
          )
          as List<_i9.Movie>);

  @override
  _i10.RequestState get topRatedMoviesState =>
      (super.noSuchMethod(
            Invocation.getter(#topRatedMoviesState),
            returnValue: _i10.RequestState.Empty,
          )
          as _i10.RequestState);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i12.Future<void> fetchNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#fetchNowPlayingMovies, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<void> fetchPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPopularMovies, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<void> fetchTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#fetchTopRatedMovies, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  void addListener(_i13.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i13.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [TvListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvListNotifier extends _i1.Mock implements _i14.TvListNotifier {
  MockTvListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.GetOnTheAirTvs get getOnTheAirTvs =>
      (super.noSuchMethod(
            Invocation.getter(#getOnTheAirTvs),
            returnValue: _FakeGetOnTheAirTvs_3(
              this,
              Invocation.getter(#getOnTheAirTvs),
            ),
          )
          as _i5.GetOnTheAirTvs);

  @override
  _i6.GetPopularTvs get getPopularTvs =>
      (super.noSuchMethod(
            Invocation.getter(#getPopularTvs),
            returnValue: _FakeGetPopularTvs_4(
              this,
              Invocation.getter(#getPopularTvs),
            ),
          )
          as _i6.GetPopularTvs);

  @override
  _i7.GetTopRatedTvs get getTopRatedTvs =>
      (super.noSuchMethod(
            Invocation.getter(#getTopRatedTvs),
            returnValue: _FakeGetTopRatedTvs_5(
              this,
              Invocation.getter(#getTopRatedTvs),
            ),
          )
          as _i7.GetTopRatedTvs);

  @override
  List<_i15.Tv> get onTheAirTvs =>
      (super.noSuchMethod(
            Invocation.getter(#onTheAirTvs),
            returnValue: <_i15.Tv>[],
          )
          as List<_i15.Tv>);

  @override
  _i10.RequestState get onTheAirTvsState =>
      (super.noSuchMethod(
            Invocation.getter(#onTheAirTvsState),
            returnValue: _i10.RequestState.Empty,
          )
          as _i10.RequestState);

  @override
  List<_i15.Tv> get popularTvs =>
      (super.noSuchMethod(
            Invocation.getter(#popularTvs),
            returnValue: <_i15.Tv>[],
          )
          as List<_i15.Tv>);

  @override
  _i10.RequestState get popularTvsState =>
      (super.noSuchMethod(
            Invocation.getter(#popularTvsState),
            returnValue: _i10.RequestState.Empty,
          )
          as _i10.RequestState);

  @override
  List<_i15.Tv> get topRatedTvs =>
      (super.noSuchMethod(
            Invocation.getter(#topRatedTvs),
            returnValue: <_i15.Tv>[],
          )
          as List<_i15.Tv>);

  @override
  _i10.RequestState get topRatedTvsState =>
      (super.noSuchMethod(
            Invocation.getter(#topRatedTvsState),
            returnValue: _i10.RequestState.Empty,
          )
          as _i10.RequestState);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i11.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i12.Future<void> fetchOnTheAirTvs() =>
      (super.noSuchMethod(
            Invocation.method(#fetchOnTheAirTvs, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<void> fetchPopularTvs() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPopularTvs, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<void> fetchTopRatedTvs() =>
      (super.noSuchMethod(
            Invocation.method(#fetchTopRatedTvs, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  void addListener(_i13.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i13.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
