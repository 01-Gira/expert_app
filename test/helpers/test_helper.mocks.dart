// Mocks generated by Mockito 5.4.6 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i24;
import 'dart:convert' as _i53;
import 'dart:typed_data' as _i54;
import 'dart:ui' as _i43;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton/common/failure.dart' as _i25;
import 'package:ditonton/common/state_enum.dart' as _i42;
import 'package:ditonton/data/datasources/db/database_helper.dart' as _i39;
import 'package:ditonton/data/datasources/movie_remote_data_source.dart'
    as _i27;
import 'package:ditonton/data/datasources/search_remote_data_source.dart'
    as _i37;
import 'package:ditonton/data/datasources/tv_remote_data_source.dart' as _i30;
import 'package:ditonton/data/datasources/watchlist_local_data_source.dart'
    as _i33;
import 'package:ditonton/data/models/media_model.dart' as _i38;
import 'package:ditonton/data/models/movie_detail_model.dart' as _i3;
import 'package:ditonton/data/models/movie_model.dart' as _i28;
import 'package:ditonton/data/models/tv_detail_model.dart' as _i4;
import 'package:ditonton/data/models/tv_model.dart' as _i31;
import 'package:ditonton/data/models/watchlist_table.dart' as _i34;
import 'package:ditonton/domain/entities/media.dart' as _i32;
import 'package:ditonton/domain/entities/movie.dart' as _i26;
import 'package:ditonton/domain/entities/movie_detail.dart' as _i11;
import 'package:ditonton/domain/entities/tv.dart' as _i29;
import 'package:ditonton/domain/entities/tv_detail.dart' as _i21;
import 'package:ditonton/domain/repositories/movie_repository.dart' as _i6;
import 'package:ditonton/domain/repositories/search_repository.dart' as _i36;
import 'package:ditonton/domain/repositories/tv_repository.dart' as _i7;
import 'package:ditonton/domain/repositories/watchlist_repository.dart' as _i22;
import 'package:ditonton/domain/usecases/get_movie_detail.dart' as _i9;
import 'package:ditonton/domain/usecases/get_movie_recommendations.dart'
    as _i10;
import 'package:ditonton/domain/usecases/get_now_playing_movies.dart' as _i44;
import 'package:ditonton/domain/usecases/get_on_the_air_tvs.dart' as _i52;
import 'package:ditonton/domain/usecases/get_popular_movies.dart' as _i16;
import 'package:ditonton/domain/usecases/get_popular_tvs.dart' as _i8;
import 'package:ditonton/domain/usecases/get_top_rated_movies.dart' as _i17;
import 'package:ditonton/domain/usecases/get_top_rated_tvs.dart' as _i18;
import 'package:ditonton/domain/usecases/get_tv_detail.dart' as _i19;
import 'package:ditonton/domain/usecases/get_tv_recommendations.dart' as _i20;
import 'package:ditonton/domain/usecases/get_watchlist_items.dart' as _i12;
import 'package:ditonton/domain/usecases/get_watchlist_status.dart' as _i15;
import 'package:ditonton/domain/usecases/remove_watchlist.dart' as _i14;
import 'package:ditonton/domain/usecases/save_watchlist.dart' as _i13;
import 'package:ditonton/domain/usecases/search_multi.dart' as _i5;
import 'package:ditonton/presentation/provider/movie_detail_notifier.dart'
    as _i46;
import 'package:ditonton/presentation/provider/popular_movies_notifier.dart'
    as _i48;
import 'package:ditonton/presentation/provider/popular_tvs_notifier.dart'
    as _i45;
import 'package:ditonton/presentation/provider/search_notifier.dart' as _i41;
import 'package:ditonton/presentation/provider/top_rated_movies_notifier.dart'
    as _i49;
import 'package:ditonton/presentation/provider/top_rated_tvs_notifier.dart'
    as _i50;
import 'package:ditonton/presentation/provider/tv_detail_notifier.dart' as _i51;
import 'package:ditonton/presentation/provider/watchlist_notifier.dart' as _i47;
import 'package:http/http.dart' as _i23;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i35;
import 'package:sqflite/sqflite.dart' as _i40;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMovieDetailResponse_1 extends _i1.SmartFake
    implements _i3.MovieDetailResponse {
  _FakeMovieDetailResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvDetailResponse_2 extends _i1.SmartFake
    implements _i4.TvDetailResponse {
  _FakeTvDetailResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSearchMulti_3 extends _i1.SmartFake implements _i5.SearchMulti {
  _FakeSearchMulti_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMovieRepository_4 extends _i1.SmartFake
    implements _i6.MovieRepository {
  _FakeMovieRepository_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvRepository_5 extends _i1.SmartFake implements _i7.TvRepository {
  _FakeTvRepository_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetPopularTvs_6 extends _i1.SmartFake implements _i8.GetPopularTvs {
  _FakeGetPopularTvs_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetMovieDetail_7 extends _i1.SmartFake
    implements _i9.GetMovieDetail {
  _FakeGetMovieDetail_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetMovieRecommendations_8 extends _i1.SmartFake
    implements _i10.GetMovieRecommendations {
  _FakeGetMovieRecommendations_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMovieDetail_9 extends _i1.SmartFake implements _i11.MovieDetail {
  _FakeMovieDetail_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetWatchlistItems_10 extends _i1.SmartFake
    implements _i12.GetWatchlistItems {
  _FakeGetWatchlistItems_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSaveWatchlistItem_11 extends _i1.SmartFake
    implements _i13.SaveWatchlistItem {
  _FakeSaveWatchlistItem_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRemoveWatchlistItem_12 extends _i1.SmartFake
    implements _i14.RemoveWatchlistItem {
  _FakeRemoveWatchlistItem_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetWatchlistStatus_13 extends _i1.SmartFake
    implements _i15.GetWatchlistStatus {
  _FakeGetWatchlistStatus_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetPopularMovies_14 extends _i1.SmartFake
    implements _i16.GetPopularMovies {
  _FakeGetPopularMovies_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTopRatedMovies_15 extends _i1.SmartFake
    implements _i17.GetTopRatedMovies {
  _FakeGetTopRatedMovies_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTopRatedTvs_16 extends _i1.SmartFake
    implements _i18.GetTopRatedTvs {
  _FakeGetTopRatedTvs_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTvDetail_17 extends _i1.SmartFake implements _i19.GetTvDetail {
  _FakeGetTvDetail_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTvRecommendations_18 extends _i1.SmartFake
    implements _i20.GetTvRecommendations {
  _FakeGetTvRecommendations_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvDetail_19 extends _i1.SmartFake implements _i21.TvDetail {
  _FakeTvDetail_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWatchlistRepository_20 extends _i1.SmartFake
    implements _i22.WatchlistRepository {
  _FakeWatchlistRepository_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_21 extends _i1.SmartFake implements _i23.Response {
  _FakeResponse_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_22 extends _i1.SmartFake
    implements _i23.StreamedResponse {
  _FakeStreamedResponse_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i6.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>
  getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i26.Movie>>(
                    this,
                    Invocation.method(#getNowPlayingMovies, []),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i26.Movie>>(
                    this,
                    Invocation.method(#getPopularMovies, []),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i26.Movie>>(
                    this,
                    Invocation.method(#getTopRatedMovies, []),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>);

  @override
  _i24.Future<_i2.Either<_i25.Failure, _i11.MovieDetail>> getMovieDetail(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, _i11.MovieDetail>>.value(
                  _FakeEither_0<_i25.Failure, _i11.MovieDetail>(
                    this,
                    Invocation.method(#getMovieDetail, [id]),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, _i11.MovieDetail>>);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>
  getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i26.Movie>>(
                    this,
                    Invocation.method(#getMovieRecommendations, [id]),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>> searchMovies(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i26.Movie>>(
                    this,
                    Invocation.method(#searchMovies, [query]),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i27.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i24.Future<List<_i28.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue: _i24.Future<List<_i28.MovieModel>>.value(
              <_i28.MovieModel>[],
            ),
          )
          as _i24.Future<List<_i28.MovieModel>>);

  @override
  _i24.Future<List<_i28.MovieModel>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue: _i24.Future<List<_i28.MovieModel>>.value(
              <_i28.MovieModel>[],
            ),
          )
          as _i24.Future<List<_i28.MovieModel>>);

  @override
  _i24.Future<List<_i28.MovieModel>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue: _i24.Future<List<_i28.MovieModel>>.value(
              <_i28.MovieModel>[],
            ),
          )
          as _i24.Future<List<_i28.MovieModel>>);

  @override
  _i24.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue: _i24.Future<_i3.MovieDetailResponse>.value(
              _FakeMovieDetailResponse_1(
                this,
                Invocation.method(#getMovieDetail, [id]),
              ),
            ),
          )
          as _i24.Future<_i3.MovieDetailResponse>);

  @override
  _i24.Future<List<_i28.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue: _i24.Future<List<_i28.MovieModel>>.value(
              <_i28.MovieModel>[],
            ),
          )
          as _i24.Future<List<_i28.MovieModel>>);

  @override
  _i24.Future<List<_i28.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue: _i24.Future<List<_i28.MovieModel>>.value(
              <_i28.MovieModel>[],
            ),
          )
          as _i24.Future<List<_i28.MovieModel>>);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i7.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>> getOnTheAirTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTvs, []),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i29.Tv>>(
                    this,
                    Invocation.method(#getOnTheAirTvs, []),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>> getPopularTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTvs, []),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i29.Tv>>(
                    this,
                    Invocation.method(#getPopularTvs, []),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>> getTopRatedTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTvs, []),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i29.Tv>>(
                    this,
                    Invocation.method(#getTopRatedTvs, []),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>);

  @override
  _i24.Future<_i2.Either<_i25.Failure, _i21.TvDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvDetail, [id]),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, _i21.TvDetail>>.value(
                  _FakeEither_0<_i25.Failure, _i21.TvDetail>(
                    this,
                    Invocation.method(#getTvDetail, [id]),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, _i21.TvDetail>>);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>> getTvRecommendations(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTvRecommendations, [id]),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i29.Tv>>(
                    this,
                    Invocation.method(#getTvRecommendations, [id]),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>> searchTvs(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchTvs, [query]),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i29.Tv>>(
                    this,
                    Invocation.method(#searchTvs, [query]),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i30.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i24.Future<List<_i31.TvModel>> getOnTheAirTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTvs, []),
            returnValue: _i24.Future<List<_i31.TvModel>>.value(
              <_i31.TvModel>[],
            ),
          )
          as _i24.Future<List<_i31.TvModel>>);

  @override
  _i24.Future<List<_i31.TvModel>> getPopularTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTvs, []),
            returnValue: _i24.Future<List<_i31.TvModel>>.value(
              <_i31.TvModel>[],
            ),
          )
          as _i24.Future<List<_i31.TvModel>>);

  @override
  _i24.Future<List<_i31.TvModel>> getTopRatedTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTvs, []),
            returnValue: _i24.Future<List<_i31.TvModel>>.value(
              <_i31.TvModel>[],
            ),
          )
          as _i24.Future<List<_i31.TvModel>>);

  @override
  _i24.Future<_i4.TvDetailResponse> getTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvDetail, [id]),
            returnValue: _i24.Future<_i4.TvDetailResponse>.value(
              _FakeTvDetailResponse_2(
                this,
                Invocation.method(#getTvDetail, [id]),
              ),
            ),
          )
          as _i24.Future<_i4.TvDetailResponse>);

  @override
  _i24.Future<List<_i31.TvModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvRecommendations, [id]),
            returnValue: _i24.Future<List<_i31.TvModel>>.value(
              <_i31.TvModel>[],
            ),
          )
          as _i24.Future<List<_i31.TvModel>>);

  @override
  _i24.Future<List<_i31.TvModel>> searchTvs(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchTvs, [query]),
            returnValue: _i24.Future<List<_i31.TvModel>>.value(
              <_i31.TvModel>[],
            ),
          )
          as _i24.Future<List<_i31.TvModel>>);
}

/// A class which mocks [WatchlistRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistRepository extends _i1.Mock
    implements _i22.WatchlistRepository {
  MockWatchlistRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i24.Future<_i2.Either<_i25.Failure, String>> saveWatchlist(
    _i32.Media? item,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveWatchlist, [item]),
            returnValue: _i24.Future<_i2.Either<_i25.Failure, String>>.value(
              _FakeEither_0<_i25.Failure, String>(
                this,
                Invocation.method(#saveWatchlist, [item]),
              ),
            ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, String>>);

  @override
  _i24.Future<_i2.Either<_i25.Failure, String>> removeWatchlist(
    int? id,
    String? mediaType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [id, mediaType]),
            returnValue: _i24.Future<_i2.Either<_i25.Failure, String>>.value(
              _FakeEither_0<_i25.Failure, String>(
                this,
                Invocation.method(#removeWatchlist, [id, mediaType]),
              ),
            ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, String>>);

  @override
  _i24.Future<bool> isAddedToWatchlist(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#isAddedToWatchlist, [id, mediaType]),
            returnValue: _i24.Future<bool>.value(false),
          )
          as _i24.Future<bool>);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i32.Media>>> getWatchlist() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlist, []),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i32.Media>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i32.Media>>(
                    this,
                    Invocation.method(#getWatchlist, []),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i32.Media>>>);
}

/// A class which mocks [WatchlistLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistLocalDataSource extends _i1.Mock
    implements _i33.WatchlistLocalDataSource {
  MockWatchlistLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i24.Future<String> insertWatchlist(_i34.WatchlistTable? item) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [item]),
            returnValue: _i24.Future<String>.value(
              _i35.dummyValue<String>(
                this,
                Invocation.method(#insertWatchlist, [item]),
              ),
            ),
          )
          as _i24.Future<String>);

  @override
  _i24.Future<String> removeWatchlist(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [id, mediaType]),
            returnValue: _i24.Future<String>.value(
              _i35.dummyValue<String>(
                this,
                Invocation.method(#removeWatchlist, [id, mediaType]),
              ),
            ),
          )
          as _i24.Future<String>);

  @override
  _i24.Future<_i34.WatchlistTable?> getItemById(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#getItemById, [id, mediaType]),
            returnValue: _i24.Future<_i34.WatchlistTable?>.value(),
          )
          as _i24.Future<_i34.WatchlistTable?>);

  @override
  _i24.Future<List<_i34.WatchlistTable>> getWatchlist() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlist, []),
            returnValue: _i24.Future<List<_i34.WatchlistTable>>.value(
              <_i34.WatchlistTable>[],
            ),
          )
          as _i24.Future<List<_i34.WatchlistTable>>);
}

/// A class which mocks [SearchRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchRepository extends _i1.Mock implements _i36.SearchRepository {
  MockSearchRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i32.Media>>> searchMulti(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchMulti, [query]),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i32.Media>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i32.Media>>(
                    this,
                    Invocation.method(#searchMulti, [query]),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i32.Media>>>);
}

/// A class which mocks [SearchRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchRemoteDataSource extends _i1.Mock
    implements _i37.SearchRemoteDataSource {
  MockSearchRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i24.Future<List<_i38.MediaModel>> searchMulti(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchMulti, [query]),
            returnValue: _i24.Future<List<_i38.MediaModel>>.value(
              <_i38.MediaModel>[],
            ),
          )
          as _i24.Future<List<_i38.MediaModel>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i39.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i24.Future<_i40.Database?> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i24.Future<_i40.Database?>.value(),
          )
          as _i24.Future<_i40.Database?>);

  @override
  _i24.Future<int> insertWatchlist(Map<String, dynamic>? item) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [item]),
            returnValue: _i24.Future<int>.value(0),
          )
          as _i24.Future<int>);

  @override
  _i24.Future<int> removeWatchlist(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [id, mediaType]),
            returnValue: _i24.Future<int>.value(0),
          )
          as _i24.Future<int>);

  @override
  _i24.Future<Map<String, dynamic>?> getItemById(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#getItemById, [id, mediaType]),
            returnValue: _i24.Future<Map<String, dynamic>?>.value(),
          )
          as _i24.Future<Map<String, dynamic>?>);

  @override
  _i24.Future<List<Map<String, dynamic>>> getWatchlist() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlist, []),
            returnValue: _i24.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i24.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [SearchNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchNotifier extends _i1.Mock implements _i41.SearchNotifier {
  MockSearchNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.SearchMulti get searchMulti =>
      (super.noSuchMethod(
            Invocation.getter(#searchMulti),
            returnValue: _FakeSearchMulti_3(
              this,
              Invocation.getter(#searchMulti),
            ),
          )
          as _i5.SearchMulti);

  @override
  _i42.RequestState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i42.RequestState.Empty,
          )
          as _i42.RequestState);

  @override
  List<_i32.Media> get searchResult =>
      (super.noSuchMethod(
            Invocation.getter(#searchResult),
            returnValue: <_i32.Media>[],
          )
          as List<_i32.Media>);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i35.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i24.Future<void> fetchMultiSearch(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#fetchMultiSearch, [query]),
            returnValue: _i24.Future<void>.value(),
            returnValueForMissingStub: _i24.Future<void>.value(),
          )
          as _i24.Future<void>);

  @override
  void addListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [GetMovieDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetail extends _i1.Mock implements _i9.GetMovieDetail {
  MockGetMovieDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.MovieRepository);

  @override
  _i24.Future<_i2.Either<_i25.Failure, _i11.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, _i11.MovieDetail>>.value(
                  _FakeEither_0<_i25.Failure, _i11.MovieDetail>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, _i11.MovieDetail>>);
}

/// A class which mocks [GetMovieRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieRecommendations extends _i1.Mock
    implements _i10.GetMovieRecommendations {
  MockGetMovieRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.MovieRepository);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>> execute(dynamic id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i26.Movie>>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>);
}

/// A class which mocks [GetNowPlayingMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingMovies extends _i1.Mock
    implements _i44.GetNowPlayingMovies {
  MockGetNowPlayingMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.MovieRepository);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i26.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>);
}

/// A class which mocks [GetPopularMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularMovies extends _i1.Mock implements _i16.GetPopularMovies {
  MockGetPopularMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.MovieRepository);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i26.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>);
}

/// A class which mocks [GetTopRatedMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedMovies extends _i1.Mock implements _i17.GetTopRatedMovies {
  MockGetTopRatedMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.MovieRepository);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i26.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i26.Movie>>>);
}

/// A class which mocks [GetPopularTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTvs extends _i1.Mock implements _i8.GetPopularTvs {
  MockGetPopularTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_5(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i7.TvRepository);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i29.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>);
}

/// A class which mocks [PopularTvsNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularTvsNotifier extends _i1.Mock
    implements _i45.PopularTvsNotifier {
  MockPopularTvsNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.GetPopularTvs get getPopularTvs =>
      (super.noSuchMethod(
            Invocation.getter(#getPopularTvs),
            returnValue: _FakeGetPopularTvs_6(
              this,
              Invocation.getter(#getPopularTvs),
            ),
          )
          as _i8.GetPopularTvs);

  @override
  _i42.RequestState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i42.RequestState.Empty,
          )
          as _i42.RequestState);

  @override
  List<_i29.Tv> get tvs =>
      (super.noSuchMethod(Invocation.getter(#tvs), returnValue: <_i29.Tv>[])
          as List<_i29.Tv>);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i35.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i24.Future<void> fetchPopularTvs() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPopularTvs, []),
            returnValue: _i24.Future<void>.value(),
            returnValueForMissingStub: _i24.Future<void>.value(),
          )
          as _i24.Future<void>);

  @override
  void addListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [MovieDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDetailNotifier extends _i1.Mock
    implements _i46.MovieDetailNotifier {
  MockMovieDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.GetMovieDetail get getMovieDetail =>
      (super.noSuchMethod(
            Invocation.getter(#getMovieDetail),
            returnValue: _FakeGetMovieDetail_7(
              this,
              Invocation.getter(#getMovieDetail),
            ),
          )
          as _i9.GetMovieDetail);

  @override
  _i10.GetMovieRecommendations get getMovieRecommendations =>
      (super.noSuchMethod(
            Invocation.getter(#getMovieRecommendations),
            returnValue: _FakeGetMovieRecommendations_8(
              this,
              Invocation.getter(#getMovieRecommendations),
            ),
          )
          as _i10.GetMovieRecommendations);

  @override
  _i11.MovieDetail get movie =>
      (super.noSuchMethod(
            Invocation.getter(#movie),
            returnValue: _FakeMovieDetail_9(this, Invocation.getter(#movie)),
          )
          as _i11.MovieDetail);

  @override
  _i42.RequestState get movieState =>
      (super.noSuchMethod(
            Invocation.getter(#movieState),
            returnValue: _i42.RequestState.Empty,
          )
          as _i42.RequestState);

  @override
  List<_i26.Movie> get movieRecommendations =>
      (super.noSuchMethod(
            Invocation.getter(#movieRecommendations),
            returnValue: <_i26.Movie>[],
          )
          as List<_i26.Movie>);

  @override
  _i42.RequestState get recommendationState =>
      (super.noSuchMethod(
            Invocation.getter(#recommendationState),
            returnValue: _i42.RequestState.Empty,
          )
          as _i42.RequestState);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i35.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  String get watchlistMessage =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistMessage),
            returnValue: _i35.dummyValue<String>(
              this,
              Invocation.getter(#watchlistMessage),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i24.Future<void> fetchMovieDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#fetchMovieDetail, [id]),
            returnValue: _i24.Future<void>.value(),
            returnValueForMissingStub: _i24.Future<void>.value(),
          )
          as _i24.Future<void>);

  @override
  void addListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [WatchlistNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistNotifier extends _i1.Mock implements _i47.WatchlistNotifier {
  MockWatchlistNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.GetWatchlistItems get getWatchlistItems =>
      (super.noSuchMethod(
            Invocation.getter(#getWatchlistItems),
            returnValue: _FakeGetWatchlistItems_10(
              this,
              Invocation.getter(#getWatchlistItems),
            ),
          )
          as _i12.GetWatchlistItems);

  @override
  _i13.SaveWatchlistItem get saveWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#saveWatchlist),
            returnValue: _FakeSaveWatchlistItem_11(
              this,
              Invocation.getter(#saveWatchlist),
            ),
          )
          as _i13.SaveWatchlistItem);

  @override
  _i14.RemoveWatchlistItem get removeWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#removeWatchlist),
            returnValue: _FakeRemoveWatchlistItem_12(
              this,
              Invocation.getter(#removeWatchlist),
            ),
          )
          as _i14.RemoveWatchlistItem);

  @override
  _i15.GetWatchlistStatus get getWatchListStatus =>
      (super.noSuchMethod(
            Invocation.getter(#getWatchListStatus),
            returnValue: _FakeGetWatchlistStatus_13(
              this,
              Invocation.getter(#getWatchListStatus),
            ),
          )
          as _i15.GetWatchlistStatus);

  @override
  List<_i32.Media> get watchlistItems =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistItems),
            returnValue: <_i32.Media>[],
          )
          as List<_i32.Media>);

  @override
  _i42.RequestState get watchlistState =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistState),
            returnValue: _i42.RequestState.Empty,
          )
          as _i42.RequestState);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i35.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#isAddedToWatchlist),
            returnValue: false,
          )
          as bool);

  @override
  String get watchlistMessage =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistMessage),
            returnValue: _i35.dummyValue<String>(
              this,
              Invocation.getter(#watchlistMessage),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i24.Future<void> fetchWatchlistItems() =>
      (super.noSuchMethod(
            Invocation.method(#fetchWatchlistItems, []),
            returnValue: _i24.Future<void>.value(),
            returnValueForMissingStub: _i24.Future<void>.value(),
          )
          as _i24.Future<void>);

  @override
  _i24.Future<void> addWatchlist(_i32.Media? item) =>
      (super.noSuchMethod(
            Invocation.method(#addWatchlist, [item]),
            returnValue: _i24.Future<void>.value(),
            returnValueForMissingStub: _i24.Future<void>.value(),
          )
          as _i24.Future<void>);

  @override
  _i24.Future<void> removeFromWatchlist(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#removeFromWatchlist, [id, mediaType]),
            returnValue: _i24.Future<void>.value(),
            returnValueForMissingStub: _i24.Future<void>.value(),
          )
          as _i24.Future<void>);

  @override
  _i24.Future<void> loadWatchlistStatus(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#loadWatchlistStatus, [id, mediaType]),
            returnValue: _i24.Future<void>.value(),
            returnValueForMissingStub: _i24.Future<void>.value(),
          )
          as _i24.Future<void>);

  @override
  void addListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [PopularMoviesNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularMoviesNotifier extends _i1.Mock
    implements _i48.PopularMoviesNotifier {
  MockPopularMoviesNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.GetPopularMovies get getPopularMovies =>
      (super.noSuchMethod(
            Invocation.getter(#getPopularMovies),
            returnValue: _FakeGetPopularMovies_14(
              this,
              Invocation.getter(#getPopularMovies),
            ),
          )
          as _i16.GetPopularMovies);

  @override
  _i42.RequestState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i42.RequestState.Empty,
          )
          as _i42.RequestState);

  @override
  List<_i26.Movie> get movies =>
      (super.noSuchMethod(
            Invocation.getter(#movies),
            returnValue: <_i26.Movie>[],
          )
          as List<_i26.Movie>);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i35.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i24.Future<void> fetchPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPopularMovies, []),
            returnValue: _i24.Future<void>.value(),
            returnValueForMissingStub: _i24.Future<void>.value(),
          )
          as _i24.Future<void>);

  @override
  void addListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [TopRatedMoviesNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTopRatedMoviesNotifier extends _i1.Mock
    implements _i49.TopRatedMoviesNotifier {
  MockTopRatedMoviesNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i17.GetTopRatedMovies get getTopRatedMovies =>
      (super.noSuchMethod(
            Invocation.getter(#getTopRatedMovies),
            returnValue: _FakeGetTopRatedMovies_15(
              this,
              Invocation.getter(#getTopRatedMovies),
            ),
          )
          as _i17.GetTopRatedMovies);

  @override
  _i42.RequestState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i42.RequestState.Empty,
          )
          as _i42.RequestState);

  @override
  List<_i26.Movie> get movies =>
      (super.noSuchMethod(
            Invocation.getter(#movies),
            returnValue: <_i26.Movie>[],
          )
          as List<_i26.Movie>);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i35.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i24.Future<void> fetchTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#fetchTopRatedMovies, []),
            returnValue: _i24.Future<void>.value(),
            returnValueForMissingStub: _i24.Future<void>.value(),
          )
          as _i24.Future<void>);

  @override
  void addListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [TopRatedTvsNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTopRatedTvsNotifier extends _i1.Mock
    implements _i50.TopRatedTvsNotifier {
  MockTopRatedTvsNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.GetTopRatedTvs get getTopRatedTvs =>
      (super.noSuchMethod(
            Invocation.getter(#getTopRatedTvs),
            returnValue: _FakeGetTopRatedTvs_16(
              this,
              Invocation.getter(#getTopRatedTvs),
            ),
          )
          as _i18.GetTopRatedTvs);

  @override
  _i42.RequestState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i42.RequestState.Empty,
          )
          as _i42.RequestState);

  @override
  List<_i29.Tv> get tvs =>
      (super.noSuchMethod(Invocation.getter(#tvs), returnValue: <_i29.Tv>[])
          as List<_i29.Tv>);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i35.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i24.Future<void> fetchTopRatedTvs() =>
      (super.noSuchMethod(
            Invocation.method(#fetchTopRatedTvs, []),
            returnValue: _i24.Future<void>.value(),
            returnValueForMissingStub: _i24.Future<void>.value(),
          )
          as _i24.Future<void>);

  @override
  void addListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [TvDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDetailNotifier extends _i1.Mock implements _i51.TvDetailNotifier {
  MockTvDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.GetTvDetail get getTvDetail =>
      (super.noSuchMethod(
            Invocation.getter(#getTvDetail),
            returnValue: _FakeGetTvDetail_17(
              this,
              Invocation.getter(#getTvDetail),
            ),
          )
          as _i19.GetTvDetail);

  @override
  _i20.GetTvRecommendations get getTvRecommendations =>
      (super.noSuchMethod(
            Invocation.getter(#getTvRecommendations),
            returnValue: _FakeGetTvRecommendations_18(
              this,
              Invocation.getter(#getTvRecommendations),
            ),
          )
          as _i20.GetTvRecommendations);

  @override
  _i21.TvDetail get tv =>
      (super.noSuchMethod(
            Invocation.getter(#tv),
            returnValue: _FakeTvDetail_19(this, Invocation.getter(#tv)),
          )
          as _i21.TvDetail);

  @override
  _i42.RequestState get tvState =>
      (super.noSuchMethod(
            Invocation.getter(#tvState),
            returnValue: _i42.RequestState.Empty,
          )
          as _i42.RequestState);

  @override
  List<_i29.Tv> get tvRecommendations =>
      (super.noSuchMethod(
            Invocation.getter(#tvRecommendations),
            returnValue: <_i29.Tv>[],
          )
          as List<_i29.Tv>);

  @override
  _i42.RequestState get recommendationState =>
      (super.noSuchMethod(
            Invocation.getter(#recommendationState),
            returnValue: _i42.RequestState.Empty,
          )
          as _i42.RequestState);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i35.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#isAddedToWatchlist),
            returnValue: false,
          )
          as bool);

  @override
  String get watchlistMessage =>
      (super.noSuchMethod(
            Invocation.getter(#watchlistMessage),
            returnValue: _i35.dummyValue<String>(
              this,
              Invocation.getter(#watchlistMessage),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i24.Future<void> fetchTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#fetchTvDetail, [id]),
            returnValue: _i24.Future<void>.value(),
            returnValueForMissingStub: _i24.Future<void>.value(),
          )
          as _i24.Future<void>);

  @override
  void addListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i43.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [GetTopRatedTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTvs extends _i1.Mock implements _i18.GetTopRatedTvs {
  MockGetTopRatedTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_5(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i7.TvRepository);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i29.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>);
}

/// A class which mocks [GetOnTheAirTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOnTheAirTvs extends _i1.Mock implements _i52.GetOnTheAirTvs {
  MockGetOnTheAirTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_5(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i7.TvRepository);

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i29.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i29.Tv>>>);
}

/// A class which mocks [GetWatchlistItems].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistItems extends _i1.Mock implements _i12.GetWatchlistItems {
  MockGetWatchlistItems() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i24.Future<_i2.Either<_i25.Failure, List<_i32.Media>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i24.Future<_i2.Either<_i25.Failure, List<_i32.Media>>>.value(
                  _FakeEither_0<_i25.Failure, List<_i32.Media>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, List<_i32.Media>>>);
}

/// A class which mocks [GetWatchlistStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistStatus extends _i1.Mock
    implements _i15.GetWatchlistStatus {
  MockGetWatchlistStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.WatchlistRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeWatchlistRepository_20(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i22.WatchlistRepository);

  @override
  _i24.Future<bool> execute(int? id, String? mediaType) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id, mediaType]),
            returnValue: _i24.Future<bool>.value(false),
          )
          as _i24.Future<bool>);
}

/// A class which mocks [SaveWatchlistItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistItem extends _i1.Mock implements _i13.SaveWatchlistItem {
  MockSaveWatchlistItem() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.WatchlistRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeWatchlistRepository_20(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i22.WatchlistRepository);

  @override
  _i24.Future<_i2.Either<_i25.Failure, String>> execute(_i32.Media? item) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [item]),
            returnValue: _i24.Future<_i2.Either<_i25.Failure, String>>.value(
              _FakeEither_0<_i25.Failure, String>(
                this,
                Invocation.method(#execute, [item]),
              ),
            ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistItem extends _i1.Mock
    implements _i14.RemoveWatchlistItem {
  MockRemoveWatchlistItem() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.WatchlistRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeWatchlistRepository_20(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i22.WatchlistRepository);

  @override
  _i24.Future<_i2.Either<_i25.Failure, String>> execute(
    int? id,
    String? mediaType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id, mediaType]),
            returnValue: _i24.Future<_i2.Either<_i25.Failure, String>>.value(
              _FakeEither_0<_i25.Failure, String>(
                this,
                Invocation.method(#execute, [id, mediaType]),
              ),
            ),
          )
          as _i24.Future<_i2.Either<_i25.Failure, String>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i23.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i24.Future<_i23.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i24.Future<_i23.Response>.value(
              _FakeResponse_21(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i24.Future<_i23.Response>);

  @override
  _i24.Future<_i23.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i24.Future<_i23.Response>.value(
              _FakeResponse_21(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i24.Future<_i23.Response>);

  @override
  _i24.Future<_i23.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i53.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i24.Future<_i23.Response>.value(
              _FakeResponse_21(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i24.Future<_i23.Response>);

  @override
  _i24.Future<_i23.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i53.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i24.Future<_i23.Response>.value(
              _FakeResponse_21(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i24.Future<_i23.Response>);

  @override
  _i24.Future<_i23.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i53.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i24.Future<_i23.Response>.value(
              _FakeResponse_21(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i24.Future<_i23.Response>);

  @override
  _i24.Future<_i23.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i53.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i24.Future<_i23.Response>.value(
              _FakeResponse_21(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i24.Future<_i23.Response>);

  @override
  _i24.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i24.Future<String>.value(
              _i35.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i24.Future<String>);

  @override
  _i24.Future<_i54.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i24.Future<_i54.Uint8List>.value(_i54.Uint8List(0)),
          )
          as _i24.Future<_i54.Uint8List>);

  @override
  _i24.Future<_i23.StreamedResponse> send(_i23.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i24.Future<_i23.StreamedResponse>.value(
              _FakeStreamedResponse_22(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i24.Future<_i23.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}
